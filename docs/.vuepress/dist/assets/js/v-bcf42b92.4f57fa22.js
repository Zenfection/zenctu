"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7880],{52095:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-bcf42b92",path:"/cosonganh/CT175-Ly_thuyet_do_thi/Thuchanh/1.html",title:"Bài thực hành 1",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"Cấu trúc đồ thị",slug:"cau-truc-đo-thi",children:[{level:3,title:"Danh sách đỉnh cung",slug:"danh-sach-đinh-cung",children:[]},{level:3,title:"Danh sách cung",slug:"danh-sach-cung",children:[]}]},{level:2,title:"Các hàm thao tác đồ thị",slug:"cac-ham-thao-tac-đo-thi",children:[{level:3,title:"Hàm nhập cơ bản",slug:"ham-nhap-co-ban",children:[]},{level:3,title:"Hàm thao tác cơ bản",slug:"ham-thao-tac-co-ban",children:[]},{level:3,title:"Các hàm xử lý đồ thị",slug:"cac-ham-xu-ly-đo-thi",children:[]}]}],filePathRelative:"cosonganh/CT175-Ly_thuyet_do_thi/Thuchanh/1.md",git:{updatedTime:1633678804e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:3}]}}},52154:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var p=a(66252);const t=(0,p.uE)('<h1 id="bai-thuc-hanh-1" tabindex="-1"><a class="header-anchor" href="#bai-thuc-hanh-1" aria-hidden="true">#</a> <img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/10/08-14-42-05-icons8-1_cute.png" width="45"> Bài thực hành 1</h1><p>Trong bài này bạn cần nắm bắt các mục như sau :</p><blockquote><ul><li><p>Khai báo cấu trúc đồ thị (chủ yếu ma trận đỉnh cung)</p></li><li><p>Các hàm cơ bản đồ thị như nhập cung</p></li><li><p>Tính bậc của 1 đỉnh trong đồ thị</p></li><li><p>Danh sách đỉnh kề của 1 đỉnh</p></li></ul></blockquote><div class="custom-container tip"><p class="custom-container-title">💡 THƯ VIỆN</p><p>Sử dụng các thư viện sau:</p><div class="language-c ext-c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span>    <span class="token comment">// thư viện cơ bản của C</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdbool.h&gt;</span>  <span class="token comment">// hỗ trợ true/false cho C</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;list.h&quot;</span>     <span class="token comment">// thư viện cá nhân hỗ trợ danh sách</span></span>\n</code></pre></div></div><div class="custom-container warning"><p class="custom-container-title">⚠️ LƯU Ý</p><p>Tất cả các đỉnh trong đồ thị bắt đầu từ <code>1</code> thay vì <code>0</code>, nên hãy để ý rõ không thì sai !!!</p></div>',5),e=(0,p.Uk)("⇣ Download thư viện "),o={href:"https://github.com/Zenfection/zenctu/blob/main/docs/cosonganh/CT175-Ly_thuyet_do_thi/Thuchanh/source/list.h",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Uk)("list.h"),l=(0,p.uE)('<h2 id="cau-truc-đo-thi" tabindex="-1"><a class="header-anchor" href="#cau-truc-đo-thi" aria-hidden="true">#</a> <img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/10/08-14-44-57-icons8-tree_structure.png" width="35"> Cấu trúc đồ thị</h2><h3 id="danh-sach-đinh-cung" tabindex="-1"><a class="header-anchor" href="#danh-sach-đinh-cung" aria-hidden="true">#</a> Danh sách đỉnh cung</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_VERTEX</span> <span class="token expression"><span class="token number">50</span> </span></span>\n<span class="token keyword">typedef</span> <span class="token keyword">struct</span><span class="token punctuation">{</span>\n    <span class="token keyword">int</span> A<span class="token punctuation">[</span>MAX_VERTEX<span class="token punctuation">]</span><span class="token punctuation">[</span>MAX_VERTEX<span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">int</span> n<span class="token punctuation">;</span> <span class="token comment">//số đỉnh</span>\n    <span class="token keyword">int</span> m<span class="token punctuation">;</span> <span class="token comment">//số cung</span>\n<span class="token punctuation">}</span>Graph<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="danh-sach-cung" tabindex="-1"><a class="header-anchor" href="#danh-sach-cung" aria-hidden="true">#</a> Danh sách cung</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX</span> <span class="token expression"><span class="token number">50</span></span></span>\n\n<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>\n    <span class="token keyword">int</span> u<span class="token punctuation">,</span> v<span class="token punctuation">;</span>\n    <span class="token keyword">int</span> w<span class="token punctuation">;</span>\n<span class="token punctuation">}</span> Edge<span class="token punctuation">;</span>\n<span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>\n    <span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>\n    Edge edges<span class="token punctuation">[</span>MAX<span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> Graph<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="cac-ham-thao-tac-đo-thi" tabindex="-1"><a class="header-anchor" href="#cac-ham-thao-tac-đo-thi" aria-hidden="true">#</a> <img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/10/08-14-45-33-icons8-service.png" width="35"> Các hàm thao tác đồ thị</h2><h3 id="ham-nhap-co-ban" tabindex="-1"><a class="header-anchor" href="#ham-nhap-co-ban" aria-hidden="true">#</a> Hàm nhập cơ bản</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">makeNullGraph</span><span class="token punctuation">(</span>Graph <span class="token operator">*</span>G<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//khởi tạo đồ thị rỗng</span>\n    G<span class="token operator">-&gt;</span>m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    G<span class="token operator">-&gt;</span>n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">init_Graph</span><span class="token punctuation">(</span>Graph <span class="token operator">*</span>G<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//khởi tạo đồ thị với n đỉnh</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>\n            G<span class="token operator">-&gt;</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">add_edge</span><span class="token punctuation">(</span>Graph <span class="token operator">*</span>G<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//thêm 1 cung vào đồ thị</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>G<span class="token operator">-&gt;</span>A<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> G<span class="token operator">-&gt;</span>A<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">//trường hợp đa cung</span>\n        G<span class="token operator">-&gt;</span>A<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> G<span class="token operator">-&gt;</span>A<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n    <span class="token keyword">else</span>\n        G<span class="token operator">-&gt;</span>A<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> G<span class="token operator">-&gt;</span>A<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">add_edgeDirection</span><span class="token punctuation">(</span>Graph <span class="token operator">*</span>G<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// thêm 1 cung cho đồ thị có hướng</span>\n    G<span class="token operator">-&gt;</span>A<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">void</span> <span class="token function">printGraph</span><span class="token punctuation">(</span>Graph G<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// in ma trận đồ thị </span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d &quot;</span><span class="token punctuation">,</span>G<span class="token punctuation">.</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">⚠️ LƯU Ý</p><p>Hàm thêm cung tuỳ thuộc vào hoàn cảnh bài toán mà bạn sửa lại cho đúng.</p></div><h3 id="ham-thao-tac-co-ban" tabindex="-1"><a class="header-anchor" href="#ham-thao-tac-co-ban" aria-hidden="true">#</a> Hàm thao tác cơ bản</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">degree</span><span class="token punctuation">(</span>Graph G<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// tính bậc của đỉnh</span>\n    <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>A<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>\n            count<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> count<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\nList <span class="token function">neighbors</span><span class="token punctuation">(</span>Graph G<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// trả về danh sách các đỉnh kề</span>\n    List L<span class="token punctuation">;</span> \n    <span class="token function">makeNullList</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>A<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token function">insertList</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token operator">&amp;</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> L<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\nList <span class="token function">arrayGraph</span><span class="token punctuation">(</span>Graph G<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// trả về danh sách các đỉnh trong đồ thị</span>\n    List L<span class="token punctuation">;</span>\n    <span class="token function">makeNullList</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>\n        <span class="token function">insertList</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token operator">&amp;</span>L<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> L<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="cac-ham-xu-ly-đo-thi" tabindex="-1"><a class="header-anchor" href="#cac-ham-xu-ly-đo-thi" aria-hidden="true">#</a> Các hàm xử lý đồ thị</h3><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>bool <span class="token function">multiEdge</span><span class="token punctuation">(</span>Graph G<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token comment">// kiểm tra có chứa đa cung không</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// hoặc = 2 đều được</span>\n                <span class="token keyword">return</span> true<span class="token punctuation">;</span>\n            \n    <span class="token keyword">return</span> false<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">int</span> <span class="token function">maxDegree</span><span class="token punctuation">(</span>Graph G<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token function">degree</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token function">degree</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>max <span class="token operator">&lt;</span> x<span class="token punctuation">)</span>\n            max <span class="token operator">=</span> x<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> x<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',13),u={render:function(n,s){const a=(0,p.up)("OutboundLink"),u=(0,p.up)("comment");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("blockquote",null,[(0,p._)("p",null,[e,(0,p._)("a",o,[c,(0,p.Wm)(a)])])]),l,(0,p.Wm)(u)],64)}}}}]);