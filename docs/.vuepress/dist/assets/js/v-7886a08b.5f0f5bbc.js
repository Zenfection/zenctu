"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5453],{99865:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-7886a08b",path:"/devbook/java/Advanced/8.html",title:"B√†i 8: Interator",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.Gi·ªõi thi·ªáu",slug:"_1-gioi-thieu",children:[]},{level:2,title:"2.S·ª≠ d·ª•ng",slug:"_2-su-dung",children:[]}],filePathRelative:"devbook/java/Advanced/8.md",git:{updatedTime:1629908316e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},13091:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const t=(0,a(66252).uE)('<h1 id="bai-8-interator" tabindex="-1"><a class="header-anchor" href="#bai-8-interator" aria-hidden="true">#</a> B√†i 8: Interator</h1><h2 id="_1-gioi-thieu" tabindex="-1"><a class="header-anchor" href="#_1-gioi-thieu" aria-hidden="true">#</a> 1.Gi·ªõi thi·ªáu</h2><div class="custom-container tip"><p class="custom-container-title">üí° <b>ITERATOR</b> L√Ä G√å ?</p><p><code>Iterator</code> l√† m·ªôt <code>Object</code> s·ª≠ d·ª•ng ƒë·ªÉ l·∫∑p qua c√°c <code>collections</code> nh∆∞ <code>ArrayList</code> v√† <code>HashSet</code>.</p></div><p>S·ª≠ d·ª•ng <code>Iterator</code> t·ª´ g√≥i <code>java.util</code> nh∆∞ sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> animals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;m√®o&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;ch√≥&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;heo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        animals<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;r·∫Øn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> it <span class="token operator">=</span> animals<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//Output : m√®o</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="_2-su-dung" tabindex="-1"><a class="header-anchor" href="#_2-su-dung" aria-hidden="true">#</a> 2.S·ª≠ d·ª•ng</h2><table><thead><tr><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-29-55-icons8-settings.png">Ph∆∞∆°ng th·ª©c</th><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-14-04-13-icons8-output.png">ƒê·∫ßu ra</th><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-30-07-icons8-handle_with_care.png">M√¥ t·∫£</th></tr></thead><tbody><tr><td>next()</td><td></td><td>tr·∫£ v·ªÅ ph·∫ßn t·ª≠ ti·∫øp theo</td></tr><tr><td>hasNext()</td><td>boolean</td><td>Tr·∫£ v·ªÅ true n·∫øu ph√©p l·∫∑p c√≤n ph·∫ßn t·ª≠</td></tr><tr><td>remove()</td><td></td><td>Xo√° c√°c m·ª•c ra kh·ªèi khi l·∫∑p qua</td></tr></tbody></table><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-35-17-icons8-search_more.png" width="25"> Duy·ªát qua m·ªôt <code>Collection</code></summary><p>B·∫°n c√≥ th·ªÉ d√πng <code>hasNext()</code> k·∫øt h·ª£p v·ªõi <code>next()</code> nh∆∞ sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">while</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//Output : ch√≥ m√®o heo r·∫Øn</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>üí° S·ª≠ d·ª•ng v√≤ng l·∫∑p tr√™n ƒë·ªÉ l·∫∑p qua c√°c ph·∫ßn t·ª≠ trong <code>Collections</code></p></blockquote></details><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-29-18-icons8-delete.png" width="23"> X√≥a ph·∫ßn t·ª≠ ra <code>Collections</code></summary><p>B·∫°n c√≥ th·ªÉ d√πng <code>remove()</code> ƒë·ªÉ xo√° ph·∫ßn t·ª≠ kh·ªèi <code>Collections</code> theo ƒëi·ªÅu ki·ªán :</p><p>Cho tr∆∞·ªõc <code>ArrayList numbers = [12,8,2,23]</code> (<em>khai b√°o chu·∫©n <code>ArrayList</code></em>)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">while</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token class-name">Integer</span> index <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        it<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//Output : [12,23]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">‚ö†Ô∏è L∆ØU √ù</p><p>Kh√¥ng n√™n d√πng v√≤ng <code>for</code> hay <code>for-each</code> ƒë·ªÉ xo√° ph·∫ßn t·ª≠ trong c√°c <code>Colections</code>, m√† h√£y d√πng <code>Iterator</code></p></div></details>',9),p={render:function(n,s){return t}}}}]);