"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9278],{32599:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-33c2bdf2",path:"/devbook/java/OOP/4.html",title:"Bài 4: Tính kế thừa và đa hình",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.Kế thừa",slug:"_1-ke-thua",children:[]},{level:2,title:"2.Đa hình",slug:"_2-đa-hinh",children:[]},{level:2,title:"3.Các Class lồng nhau",slug:"_3-cac-class-long-nhau",children:[]}],filePathRelative:"devbook/java/OOP/4.md",git:{updatedTime:1629908316e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},91536:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(66252).uE)('<h1 id="bai-4-tinh-ke-thua-va-đa-hinh" tabindex="-1"><a class="header-anchor" href="#bai-4-tinh-ke-thua-va-đa-hinh" aria-hidden="true">#</a> Bài 4: Tính kế thừa và đa hình</h1><h2 id="_1-ke-thua" tabindex="-1"><a class="header-anchor" href="#_1-ke-thua" aria-hidden="true">#</a> 1.Kế thừa</h2><p>Trong <code>Java</code> các <code>attributes</code> và <code>methods</code> có thể kế thừa từ <code>class</code> khác.</p><p>==&gt; Ở đây,chúng tôi gọi đó là <code>Inheritance</code></p><div class="custom-container tip"><p class="custom-container-title">💡 GỒM 2 LOẠI :</p><ul><li><code>subclass</code> (con) : <em>là <code>class</code> được kế thừa từ <code>class</code> khác</em></li><li><code>superclass</code> (cha) : là <code>class</code> thừa kế</li></ul></div><p>Ta sử dụng từ khoá <code>extends</code> để kế thừa từ một <code>class</code> :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Animals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">protected</span> <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;mèo&quot;</span><span class="token punctuation">;</span> <span class="token comment">//thuộc tính</span>\n    <span class="token keyword">public</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//phương thước</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Con vật đang chạy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Aminals</span><span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> spec <span class="token operator">=</span> <span class="token string">&quot;chó&quot;</span><span class="token punctuation">;</span> <span class="token comment">//thuộc tính</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Dog</span> myDog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//tạo một object từ class Dog kế thừa từ Animals</span>\n        myDog<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//gọi phương thức run() từ class Dog kế thừa từ Animals</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myDog<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> myDog<span class="token punctuation">.</span>spec<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* Con vật đang chạy \n   mèo chó  */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">⚠️ LƯU Ý</p><p>Hãy để ý ở lớp <code>Animals</code> tôi đã sử dụng <code>protected</code> để khai báo ==&gt; Vì nếu</p><ul><li>Đặt <code>private</code> thì lớp <code>Dog</code> sẽ không truy cập được</li><li>Đặt <code>public</code> thì không bảo đảm tính <strong>an toàn</strong> và <strong>đóng gói</strong></li></ul></div><h4 id="😭-oi-toi-khong-muon-ke-thua-cua-ai-het-toi-can-lam-sao" tabindex="-1"><a class="header-anchor" href="#😭-oi-toi-khong-muon-ke-thua-cua-ai-het-toi-can-lam-sao" aria-hidden="true">#</a> 😭 Ôi, tôi không muốn kế thừa của ai hết, tôi cần làm sao ?</h4><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-18-27-00-icons8-send_comment.png" width="23"> TRẢ LỜI</summary><p>Sử dụng từ khoá <code>final</code> quốc dân thôi !!!</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Animals</span><span class="token punctuation">{</span>\n    <span class="token comment">//...</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animals</span><span class="token punctuation">{</span> <span class="token comment">// Dòng này sẽ lỗi ngay lập tức</span>\n    <span class="token comment">//...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>💡 Nếu bạn cố gắng kế thừa lớp <code>Animals</code> thì sẽ lỗi ngay !!!</p></blockquote></details><h2 id="_2-đa-hinh" tabindex="-1"><a class="header-anchor" href="#_2-đa-hinh" aria-hidden="true">#</a> 2.Đa hình</h2><p><code>Polymorphism</code> có nghĩa là &quot;many forms&quot;, nhiều <code>class</code> liên quan với nhau <strong>kế thừa</strong> nhau</p><div class="custom-container tip"><p class="custom-container-title">💡 GỢI NHỚ</p><p>Như bạn đã biết thì <code>Interitance</code> sẽ cho phép <code>attributes</code> và <code>methods</code> kế thừa từ <code>class</code> khác. Thì <strong>đa hình</strong> có nghĩa là vẫn <code>methods</code> đó nhưng cách thức thực hiện khác nhau</p></div><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/02-11-21-10-Assignment.png" width="25"> VÍ DỤ</summary><p>🔥 Hiểu đơn giản, cũng là hàm <code>dientich()</code> để tính <strong>diện tích</strong>, nhưng nếu bạn nhập thông số của <strong>hình vuông</strong> nó sẽ ra <strong>diện tích hình vuông</strong>, nhập thông số <strong>hình chữ nhật</strong> thì sẽ ra <strong>diện tích hình chữ nhật</strong></p></details><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">HinhHoc</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dienTich</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Tính diện tích hình học&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">HinhVuong</span> <span class="token keyword">extends</span> <span class="token class-name">HinhHoc</span><span class="token punctuation">{</span> <span class="token comment">// class hình vuông kế thừa từ class hình học</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">dienTich</span><span class="token punctuation">(</span><span class="token keyword">int</span> canh<span class="token punctuation">)</span><span class="token punctuation">{</span> \n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Diện tích hình vuông là &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>canh<span class="token operator">*</span>canh<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">HinhChuNhat</span> <span class="token keyword">extends</span> <span class="token class-name">HinhHoc</span><span class="token punctuation">{</span> <span class="token comment">// class hình chữ nhật kế thừa từ class hình học</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dienTich</span><span class="token punctuation">(</span><span class="token keyword">int</span> dai<span class="token punctuation">,</span><span class="token keyword">int</span> rong<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Diện tích hình chữ nhật là &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>dai<span class="token operator">*</span>rong<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><blockquote><p>🔥 Như bạn đã thấy thì hàm <code>dienTich()</code> được lớp <code>HinhVuong</code> và lớp <code>HinhChuNhat</code> kế thừa từ lớp <code>HinhHoc</code> nhưng dĩ nhiên chức năng của nó khác nhau như sau :</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">HinhHoc</span> hinhHoc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HinhHoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">HinhVuong</span> hinhVuong <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HinhVuong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">HinhChuNhat</span> hinhChuNhat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HinhChuNhat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        hinhHoc<span class="token punctuation">.</span><span class="token function">dienTich</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        hinhVuong<span class="token punctuation">.</span><span class="token function">dienTich</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        hinhChuNhat<span class="token punctuation">.</span><span class="token function">dienTich</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* Tính diện tích hình học\n   Diện tích hình vuông là 25\n   Diện tích hình chữ nhật là 15\n*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">🚀 GHI NHỚ</p><p>Sử dụng tốt <strong>đa hình</strong> và <strong>kế thừa</strong> sẽ khiến code của bạn có tính tái sử dụng cao (<em>chỉ cần viết 1 lần dùng cho các vấn đề tương tự</em>)</p></div><h2 id="_3-cac-class-long-nhau" tabindex="-1"><a class="header-anchor" href="#_3-cac-class-long-nhau" aria-hidden="true">#</a> 3.Các Class lồng nhau</h2><p>Trong <code>Java</code>, ta có thể viết các <code>class</code> này lồng <code>class</code> khác gọi là <code>Inner Classes</code> để làm cho code dễ bảo trì và dễ hiểu hơn</p><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-31-43-icons8-instagram_check_mark.png" width="25"> Cách dùng <code>Inner Classes</code></summary><p>Hãy tạo một <code>Object</code> của <code>class</code> ngoài, sau đó tạo một <code>Object</code> của <code>class</code> trong, như sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> lopNgoai<span class="token punctuation">{</span>\n    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n    <span class="token keyword">class</span> lopTrong<span class="token punctuation">{</span>\n        <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        lopNgoai myOuter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">lopNgoai</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        lopNgoai<span class="token punctuation">.</span>lopTrong myInner <span class="token operator">=</span> myOuter<span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token function">lopTrong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myInner<span class="token punctuation">.</span>y <span class="token operator">+</span> myOuter<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// output : 15 (5 + 10)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><blockquote><p>💡 Như bạn đã thấy thì thì lớp <code>lopTrong</code> nằm trong lớp <code>lopNgoai</code>, vì thế chúng ta cũng có cách khai báo như trên.</p></blockquote></details><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-18-02-21-icons8-why_quest.png" width="25"> Các <code>class</code> trong có thể truy cập <code>class</code> ngoài không</summary><p>Dĩ nhiên là được, vì đó là lợi thế của việc sử dụng <code>Inner Classes</code>, như sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> lopNgoai<span class="token punctuation">{</span>\n    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n    <span class="token keyword">class</span> lopTrong<span class="token punctuation">{</span>\n        <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">myInnerMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">return</span> x<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        lopNgoai myOuter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token function">lopNgoai</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        lopNgoai<span class="token punctuation">.</span>lopTrong myInner <span class="token operator">=</span> myOuter<span class="token punctuation">.</span><span class="token keyword">new</span> <span class="token function">lopTrong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myInner<span class="token punctuation">.</span><span class="token function">myInnerMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// output : 10</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></details><blockquote><p>💡 Bạn cũng có thể khai báo <code>class</code> bên trong là <code>static</code> để có thể sử dụng mà không cần tạo <code>Object</code></p></blockquote><p>::: detail <img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/02-11-21-10-Assignment.png" width="25"> Cụ thể như sau</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> lopNgoai<span class="token punctuation">{</span>\n    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n    <span class="token keyword">static</span> <span class="token keyword">class</span> lopTrong<span class="token punctuation">{</span>\n        <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        lopNgoai<span class="token punctuation">.</span>lopTrong myInner <span class="token operator">=</span> <span class="token keyword">new</span> lopNgoai<span class="token punctuation">.</span><span class="token function">lopTrong</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myInner<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// output : 5</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>:::</p><div class="custom-container warning"><p class="custom-container-title">⚠️ LƯU Ý</p><p>Sử dụng <code>static</code> sẽ làm cho <code>class</code> trong không thể truy cập <code>class</code> ngoài ==&gt; <code>myInner.x</code> là sai và lỗi.</p></div>',27),t={render:function(n,s){return p}}}}]);