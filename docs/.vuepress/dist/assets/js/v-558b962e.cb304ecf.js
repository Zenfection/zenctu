"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[47],{81092:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-558b962e",path:"/devbook/java/Basic/4.html",title:"Bài 4: Biến",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.Khởi tạo biến",slug:"_1-khoi-tao-bien",children:[]},{level:2,title:"2.Quy tắc đặt biến",slug:"_2-quy-tac-đat-bien",children:[]},{level:2,title:"3.Hiển thị biến",slug:"_3-hien-thi-bien",children:[]}],filePathRelative:"devbook/java/Basic/4.md",git:{updatedTime:1629908316e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},2641:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(66252).uE)('<h1 id="bai-4-bien" tabindex="-1"><a class="header-anchor" href="#bai-4-bien" aria-hidden="true">#</a> Bài 4: Biến</h1><div class="custom-container warning"><p class="custom-container-title">💡 GHI NHỚ</p><p><strong>Variables</strong> (<em>Biến</em>) : là vùng chứa giá trị của dữ liệu</p></div><p>Trong <code>Java</code> có các biến cơ bản sau :</p><ul><li><code>String</code> (chuỗi) : <em>chứa văn bản như &quot;Kiệt đẹp trai&quot;</em></li><li><code>int</code> &amp; <code>long</code> (số nguyên) : <em>chứa số nguyên như 1,2,3...</em></li><li><code>float</code> &amp; <code>double</code> (số thực) : <em>chứa số thực như 2.343...</em></li><li><code>char</code> (Ký tự) : <em>chứa ký tự như a,b,c...</em></li><li><code>boolean</code> : <em>chứa 2 trạng thái là</em> <strong>true</strong> <em>và</em> <strong>false</strong></li></ul><h2 id="_1-khoi-tao-bien" tabindex="-1"><a class="header-anchor" href="#_1-khoi-tao-bien" aria-hidden="true">#</a> 1.Khởi tạo biến</h2><div class="custom-container tip"><p class="custom-container-title">💡CÚ PHÁP TẠO BIẾN</p><p><code>kiểu dữ liệu = giá trị</code></p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> myNum <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n<span class="token keyword">float</span> myFloatNum <span class="token operator">=</span> <span class="token number">5.32f</span><span class="token punctuation">;</span> <span class="token comment">// cuối có f</span>\n<span class="token keyword">double</span> myDoubleNum <span class="token operator">=</span> <span class="token number">5.23d</span><span class="token punctuation">;</span> <span class="token comment">// cuối có d</span>\n<span class="token keyword">char</span> myLetter <span class="token operator">=</span> <span class="token string">&#39;K&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">boolean</span> myBool <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token class-name">String</span> myName <span class="token operator">=</span> <span class="token string">&quot;Lê Tuấn Kiệt&quot;</span><span class="token punctuation">;</span> <span class="token comment">// String viết hoa</span>\n\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;number = &quot;</span> <span class="token operator">+</span> myNum<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;floatNumber = &quot;</span> <span class="token operator">+</span> myFloatNum<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;DoubleNumber  = &quot;</span> <span class="token operator">+</span> myDoubleNum<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;name = &quot;</span> <span class="token operator">+</span> myName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Letter = &quot;</span> <span class="token operator">+</span> myLetter<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;bool = &quot;</span> <span class="token operator">+</span> myBool<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/01/30-18-33-11-java-oop_5.png" title="" alt="java-oop_5.png" width="373"><h2 id="_2-quy-tac-đat-bien" tabindex="-1"><a class="header-anchor" href="#_2-quy-tac-đat-bien" aria-hidden="true">#</a> 2.Quy tắc đặt biến</h2><div class="custom-container warning"><p class="custom-container-title">⚠️ QUY TẮC ĐẶT TÊN <b>BIẾN</b></p><ul><li><strong>Không</strong> bắt đầu bằng số</li><li><strong>Không</strong> có khoảng trắng (<em>sử dụng _ như bien_1</em>)</li><li><strong>Không</strong> chứa ký tự đặt biệt (<em>như #,+,-....</em>)</li><li><strong>Không</strong> trùng với <code>keyword</code> (<em>như if,for,class...</em>)</li></ul></div><div class="custom-container tip"><p class="custom-container-title">💡 MẸO ĐẶT TÊN <b>BIẾN</b></p><ul><li><p>Viết tên hàm theo quy tắc <code>camelCase</code> : <em>nghĩa là chữ đầu viết thường, các chữ sau viết hoa chữ cái đầu</em>, như sau:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">tenHam</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">int</span> <span class="token function">checkNguyenTo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">char</span> <span class="token function">checkChuHoa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>Viết hoa toàn bộ ghi đặt tên biến là hằng số và sử dụng <code>final</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">float</span> PI <span class="token operator">=</span> <span class="token number">3.14f</span><span class="token punctuation">;</span>\n<span class="token keyword">final</span> <span class="token keyword">int</span> SOTUCHON <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li></ul><blockquote><p>Nếu bạn không muốn chỉnh sửa biến đó về sau, cho nó là hằng số và chỉ được phép <em>đọc</em>, thì hãy dùng <code>final</code>:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">final</span> <span class="token keyword">int</span> PI <span class="token operator">=</span> <span class="token number">3.14</span><span class="token punctuation">;</span>\nPI <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">//hàm này sẽ lỗi vì PI không thể thay đổi</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></blockquote></div><h2 id="_3-hien-thi-bien" tabindex="-1"><a class="header-anchor" href="#_3-hien-thi-bien" aria-hidden="true">#</a> 3.Hiển thị biến</h2><p>Sử dụng <code>System.out.println</code> để hiển thị ra màn hình, và để kết hợp đoạn văn bản và biến hãy sử dụng dấu <code>+</code> như sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> firstName <span class="token operator">=</span> <span class="token string">&quot;Lê&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name">String</span> middleName <span class="token operator">=</span> <span class="token string">&quot;Tuấn&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name">String</span> lastName <span class="token operator">=</span> <span class="token string">&quot;Kiệt&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Tên tôi là : &quot;</span> <span class="token operator">+</span> firstName <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> middleName <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> lastName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><img title="" src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/01/30-20-34-03-java-oop_6.png" alt="java-oop_6.png" width="345"><blockquote><p>🔥 Như bạn đã thấy tôi đã tự động thêm chuỗi <code>&quot; &quot;</code> để tạo khoảng cách cho tên của tôi.</p></blockquote><p>Và bạn cũng có thể tính toán thẳng trong đó như sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a + b = &quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// output : a + b = 9</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">⚠️ LƯU Ý</p><p>Với những phép toán bạn phải bọc nó lại bằng dấu <code>()</code> nha.</p></div>',19),e={render:function(n,s){return t}}}}]);