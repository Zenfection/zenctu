"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7790],{261:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-b620c916",path:"/cosonganh/CT175-Ly_thuyet_do_thi/Thuchanh/3.html",title:"Bài thực hành 3",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"Tìm đường đi ngắn nhất bằng Dijkstra",slug:"tim-đuong-đi-ngan-nhat-bang-dijkstra",children:[]},{level:2,title:"Tìm đường đi ngắn nhất bằng bellman-Ford",slug:"tim-đuong-đi-ngan-nhat-bang-bellman-ford",children:[]}],filePathRelative:"cosonganh/CT175-Ly_thuyet_do_thi/Thuchanh/3.md",git:{updatedTime:1633678804e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},56123:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var p=a(66252);const t=(0,p.uE)('<h1 id="bai-thuc-hanh-3" tabindex="-1"><a class="header-anchor" href="#bai-thuc-hanh-3" aria-hidden="true">#</a> <img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/10/08-14-42-15-icons8-3_cute.png" width="45"> Bài thực hành 3</h1><p>Trong bài này bạn cần nắm bắt các mục như sau :</p><blockquote><ul><li><p>Tìm đường đi ngắn nhất bằng <code>Dijkstra</code> và <code>bellman-Ford</code></p></li><li><p>Kiểm tra chu trình âm và ứng dụng của đường đi ngắn nhất</p></li></ul></blockquote><div class="custom-container tip"><p class="custom-container-title">💡 THƯ VIỆN</p><p>Sử dụng các thư viện sau:</p><div class="language-c ext-c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span>    <span class="token comment">// thư viện cơ bản của C</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdbool.h&gt;</span>  <span class="token comment">// hỗ trợ true/false cho C</span></span>\n<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;list.h&quot;</span>     <span class="token comment">// thư viện cá nhân hỗ trợ danh sách</span></span>\n</code></pre></div></div>',4),o=(0,p.Uk)("⇣ Download thư viện "),e={href:"https://github.com/Zenfection/zenctu/blob/main/docs/cosonganh/CT175-Ly_thuyet_do_thi/Thuchanh/source/list.h",target:"_blank",rel:"noopener noreferrer"},c=(0,p.Uk)("list.h"),l=(0,p.uE)('<div class="custom-container warning"><p class="custom-container-title">⚠️ LƯU Ý</p><p>Tất cả các đỉnh trong đồ thị bắt đầu từ <code>1</code> thay vì <code>0</code>, nên hãy để ý rõ không thì sai !!!</p></div><h2 id="tim-đuong-đi-ngan-nhat-bang-dijkstra" tabindex="-1"><a class="header-anchor" href="#tim-đuong-đi-ngan-nhat-bang-dijkstra" aria-hidden="true">#</a> Tìm đường đi ngắn nhất bằng <code>Dijkstra</code></h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">dijksta</span><span class="token punctuation">(</span>Graph G<span class="token punctuation">,</span> <span class="token keyword">int</span> s<span class="token punctuation">,</span> List <span class="token operator">*</span>parrent<span class="token punctuation">,</span> List <span class="token operator">*</span>cost<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    bool mark<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">int</span> u<span class="token punctuation">,</span>v<span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span>u <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> u <span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> u<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">//* khởi tạo mảng</span>\n        cost<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">999</span><span class="token punctuation">;</span>\n        mark<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> false<span class="token punctuation">;</span>\n        parrent<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    parrent<span class="token operator">-&gt;</span>Size <span class="token operator">=</span> cost<span class="token operator">-&gt;</span>Size <span class="token operator">=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span>\n\n    cost<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//* đi từ đỉnh s, về đến đỉnh </span>\n    parrent<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//* đỉnh bắt đầu không có parent </span>\n\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">int</span> min_pi <span class="token operator">=</span> <span class="token number">999</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token comment">//* Tìm đỉnh chưa duyệt có giá trị min_pi</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>mark<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> cost<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> min_pi<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                min_pi <span class="token operator">=</span> cost<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>\n                u <span class="token operator">=</span> j<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n        mark<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//* đánh dấu đã duyệt xong đỉnh đó</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span>v <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> v <span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> v<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>G<span class="token punctuation">.</span>A<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>mark<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token keyword">int</span> x <span class="token operator">=</span> cost<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">+</span> G<span class="token punctuation">.</span>A<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">;</span>\n                <span class="token keyword">if</span><span class="token punctuation">(</span>x <span class="token operator">&lt;</span> cost<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                    cost<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>\n                    parrent<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> u<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="tim-đuong-đi-ngan-nhat-bang-bellman-ford" tabindex="-1"><a class="header-anchor" href="#tim-đuong-đi-ngan-nhat-bang-bellman-ford" aria-hidden="true">#</a> Tìm đường đi ngắn nhất bằng <code>bellman-Ford</code></h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">bellmanFord</span><span class="token punctuation">(</span>Graph G<span class="token punctuation">,</span> <span class="token keyword">int</span> s<span class="token punctuation">,</span>List <span class="token operator">*</span>cost<span class="token punctuation">,</span> List <span class="token operator">*</span>parrent<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// khởi tạo ban đầu</span>\n        cost<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">999</span><span class="token punctuation">;</span>\n        parrent<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    cost<span class="token operator">-&gt;</span>Size <span class="token operator">=</span> parrent<span class="token operator">-&gt;</span>Size <span class="token operator">=</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span>\n    \n    cost<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    parrent<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> it <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> it <span class="token operator">&lt;</span> G<span class="token punctuation">.</span>n<span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> G<span class="token punctuation">.</span>m<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">int</span> u <span class="token operator">=</span> G<span class="token punctuation">.</span>edge<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>u<span class="token punctuation">;</span>\n            <span class="token keyword">int</span> v <span class="token operator">=</span> G<span class="token punctuation">.</span>edge<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>v<span class="token punctuation">;</span>\n            <span class="token keyword">int</span> w <span class="token operator">=</span> G<span class="token punctuation">.</span>edge<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>w<span class="token punctuation">;</span>\n            <span class="token keyword">int</span> x <span class="token operator">=</span> cost<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">+</span> w<span class="token punctuation">;</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>x <span class="token operator">&lt;</span> cost<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                cost<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>\n                parrent<span class="token operator">-&gt;</span>Data<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> u<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div>',5),u={render:function(n,s){const a=(0,p.up)("OutboundLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("blockquote",null,[(0,p._)("p",null,[o,(0,p._)("a",e,[c,(0,p.Wm)(a)])])]),l],64)}}}}]);