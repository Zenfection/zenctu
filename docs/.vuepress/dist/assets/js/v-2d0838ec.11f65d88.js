"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2189],{27397:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-2d0838ec",path:"/devbook/java/Advanced/14.html",title:"B√†i 14: File Handling",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.Gi·ªõi thi·ªáu",slug:"_1-gioi-thieu",children:[]},{level:2,title:"2.T·∫°o v√† ghi file",slug:"_2-tao-va-ghi-file",children:[{level:3,title:"T·∫°o m·ªôt file",slug:"tao-mot-file",children:[]},{level:3,title:"Ghi m·ªôt file",slug:"ghi-mot-file",children:[]}]},{level:2,title:"3.ƒê·ªçc file",slug:"_3-ƒëoc-file",children:[{level:3,title:"ƒê·ªçc n·ªôi dung file",slug:"ƒëoc-noi-dung-file",children:[]},{level:3,title:"Hi·ªÉn th·ªã th√¥ng tin file",slug:"hien-thi-thong-tin-file",children:[]}]},{level:2,title:"4.Xo√° file",slug:"_4-xoa-file",children:[]}],filePathRelative:"devbook/java/Advanced/14.md",git:{updatedTime:1629908316e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},42306:(n,s,a)=>{a.r(s),a.d(s,{default:()=>h});var t=a(66252);const p=(0,t.uE)('<h1 id="bai-14-file-handling" tabindex="-1"><a class="header-anchor" href="#bai-14-file-handling" aria-hidden="true">#</a> B√†i 14: File Handling</h1><h2 id="_1-gioi-thieu" tabindex="-1"><a class="header-anchor" href="#_1-gioi-thieu" aria-hidden="true">#</a> 1.Gi·ªõi thi·ªáu</h2><p>L·ªõp <code>File</code> n·∫±m trong g√≥i <code>java.io</code> cho ph√©p ta x·ª≠ l√Ω v·ªÅ file r·∫•t linh ho·∫°t :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>\n<span class="token class-name">File</span> myFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;kietdeptrai.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>C√°c ph∆∞∆°ng th·ª©c ph·ªï bi·∫øn c·ªßa <code>File</code> :</p><table><thead><tr><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-29-55-icons8-settings.png">Ph∆∞∆°ng th·ª©c</th><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-15-28-41-icons8-text_width.png">Ki·ªÉu d·ªØ li·ªáu</th><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-30-07-icons8-handle_with_care.png">M√¥ t·∫£</th></tr></thead><tbody><tr><td>canRead()<br>canWrite()<br>exists()</td><td>Boolean</td><td>Ki·ªÉm tra file c√≥ <strong>ƒë·ªçc</strong>¬†ƒë∆∞·ª£c kh√¥ng<br>Ki·ªÉm tra file c√≥ <strong>ghi</strong>¬†ƒë∆∞·ª£c kh√¥ng<br>KI·ªÉm tra file c√≥ <strong>t·ªìn t·∫°i</strong>¬†kh√¥ng</td></tr><tr><td>createNewFile()<br>delete()</td><td>Boolean</td><td>T·∫°o m·ªôt file tr·ªëng<br>Xo√° m·ªôt file</td></tr><tr><td>write(x)</td><td></td><td>Ghi m·ªô file</td></tr><tr><td>close()</td><td></td><td>ƒê√≥ng m·ªôt file</td></tr><tr><td>getName()</td><td>String</td><td>Tr·∫£ v·ªÅ t√™n c·ªßa file</td></tr><tr><td>getAbsolutePath()</td><td>String</td><td>Tr·∫£ v·ªÅ ƒë∆∞·ªùng d·∫´n tuy·ªát ƒë·ªëi c·ªßa file</td></tr><tr><td>length()</td><td>Long</td><td>Tr·∫£ v·ªÅ k√≠ch th∆∞·ªõc t·ªáp (<em>t√≠nh b·∫±ng byte</em>)</td></tr><tr><td>list()</td><td>String[]</td><td>Tr·∫£ v·ªÅ m·∫£ng c√°c t·ªáp trong th∆∞ m·ª•c</td></tr><tr><td>mkdir()</td><td>Boolean</td><td>T·∫°o th∆∞ m·ª•c</td></tr></tbody></table><h2 id="_2-tao-va-ghi-file" tabindex="-1"><a class="header-anchor" href="#_2-tao-va-ghi-file" aria-hidden="true">#</a> 2.T·∫°o v√† ghi file</h2><h3 id="tao-mot-file" tabindex="-1"><a class="header-anchor" href="#tao-mot-file" aria-hidden="true">#</a> <img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-27-22-icons8-add.png" width="25"> T·∫°o m·ªôt file</h3><p>S·ª≠ d·ª•ng <code>createNewFile()</code> ƒë·ªÉ t·∫°o m·ªôt file.</p><blockquote><ul><li>Tr·∫£ v·ªÅ <code>true</code> n·∫øu t·∫°o th√†nh c√¥ng</li><li>Tr·∫£ v·ªÅ <code>false</code> n·∫øu file t·ªìn t·∫°i</li></ul></blockquote><div class="custom-container tip"><p class="custom-container-title">üí° M·∫∏O</p><p>B·∫°n n√™n s·ª≠ d·ª•ng chung v·ªõi <code>try..catch</code> nh∆∞ sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            <span class="token class-name">File</span> myFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;kietdeptrai.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>myFile<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;File ƒë√£ t·∫°o : &quot;</span> <span class="token operator">+</span> myFile<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">else</span><span class="token punctuation">{</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;File ƒë√£ t·ªìn t·∫°i&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;L·ªói t·∫°o file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// Output : File ƒë√£ t·∫°o : kietdeptrai.txt</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></div><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/20-21-32-59-AÃânh chuÃ£p MaÃÄn hiÃÄnh 2021-02-20 luÃÅc 21.32.55.png"><p>üî• Sau khi t·∫°o th√†nh c√¥ng c√°c b·∫°n c√≥ ngay file <code>kietdeptrai.txt</code></p><div class="custom-container warning"><p class="custom-container-title">‚ö†Ô∏è L∆ØU √ù</p><p>M·∫∑c ƒë·ªãnh n√≥ s·∫Ω t·∫°o file ƒë√∫ng v·ªõi th∆∞ m·ª•c ta ƒëang code, n·∫øu ta mu·ªën t·∫°o ·ªü n∆°i kh√°c, h√£y d√πng :</p><ul><li><p>K√Ω t·ª± <code>\\\\</code> cho <code>Windows</code> ‚û® <em>\\Users\\name\\filename.txt</em></p></li><li><p>K√Ω t·ª± <code>/</code> cho <code>Linux</code> v√† <code>MacOS</code> ‚û® <em>/Users/name/filename.txt</em></p></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">File</span> myObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\MyName\\\\filename.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//D√†nh cho Windows</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><h3 id="ghi-mot-file" tabindex="-1"><a class="header-anchor" href="#ghi-mot-file" aria-hidden="true">#</a> <img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-15-33-42-icons8-typewriter_with_paper.png"> Ghi m·ªôt file</h3><p>S·ª≠ d·ª•ng <code>write()</code> ƒë·ªÉ ghi file</p><p>S·ª≠ d·ª•ng l·ªõp <code>FileWrite</code> c√πng v·ªõi ph∆∞∆°ng th·ª©c <code>write()</code> ta c√≥ th·ªÉ ghi ƒë∆∞·ª£c trong file</p><div class="custom-container warning"><p class="custom-container-title">‚ö†Ô∏è L∆ØU √ù</p><p>Sau khi ghi xong ta ph·∫£i ƒë√≥ng file l·∫°i b·∫±ng ph∆∞∆°ng th·ª©c <code>close()</code></p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileWriter</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">FileWriter</span> myWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileWriter</span><span class="token punctuation">(</span><span class="token string">&quot;kietdeptrai.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            myWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;T√¥i l√† Ki·ªát ƒë·∫πp trai ƒë√≥ nha !!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            myWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ƒê√£ ghi file th√†nh c√¥ng&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;X·∫£y ra l·ªói khi ghi file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//Output : ƒê√£ ghi file th√†nh c√¥ng</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><ul><li><p>V√† sau ƒë√≥ m·ªü file <code>kietdeptrai.txt</code> :</p><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/20-21-56-45-AÃânh chuÃ£p MaÃÄn hiÃÄnh 2021-02-20 luÃÅc 21.56.41.png"></li></ul><h2 id="_3-ƒëoc-file" tabindex="-1"><a class="header-anchor" href="#_3-ƒëoc-file" aria-hidden="true">#</a> 3.ƒê·ªçc file</h2><h3 id="ƒëoc-noi-dung-file" tabindex="-1"><a class="header-anchor" href="#ƒëoc-noi-dung-file" aria-hidden="true">#</a> ƒê·ªçc n·ªôi dung file</h3><p>S·ª≠ d·ª•ng l·ªõp <code>Scanner</code> ƒë·ªÉ ƒë·ªçc n·ªôi dung trong file</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            <span class="token class-name">File</span> myFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;kietdeptrai.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">Scanner</span> myReader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span>myFile<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">while</span> <span class="token punctuation">(</span>myReader<span class="token punctuation">.</span><span class="token function">hasNextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token class-name">String</span> data <span class="token operator">=</span> myReader<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;L·ªói x·∫£y ra khi ƒë·ªçc file&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//Output : T√¥i l√† Ki·ªát ƒë·∫πp trai ƒë√≥ nha !!!</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',24),e={class:"custom-container warning"},c=(0,t.uE)('<p class="custom-container-title">‚ö†Ô∏è L∆ØU √ù</p><p>H√†m sau ƒë√¢y :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>myReader<span class="token punctuation">.</span><span class="token function">hasNextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n     <span class="token class-name">String</span> data <span class="token operator">=</span> myReader<span class="token punctuation">.</span><span class="token function">nextLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',3),o=(0,t.Uk)("B·ªüi v√¨ l·ªõp "),l=(0,t._)("code",null,"Scanner",-1),i=(0,t.Uk)(" k·∫ø th·ª´a t·ª´ "),u=(0,t._)("code",null,"Iterator",-1),r=(0,t.Uk)(" n√™n v·∫≠y, c·ªçi l·∫°i "),k={href:"https://github.com/Zenfection/Java/blob/master/Java%20Advaced/8.Iterator.md",target:"_blank",rel:"noopener noreferrer"},d=(0,t.Uk)("Iterator"),m=(0,t._)("p",null,[(0,t.Uk)("N√≥ c√≥ nghƒ©a l√† "),(0,t._)("code",null,"myReader"),(0,t.Uk)(" ƒë·ªçc t·ªõi cu·ªëi d√≤ng, Chu·ªói data s·∫Ω l∆∞u t·ª´ng d√≤ng trong file r·ªìi in ra ƒë·∫øn h·∫øt.")],-1),b=(0,t.uE)('<h3 id="hien-thi-thong-tin-file" tabindex="-1"><a class="header-anchor" href="#hien-thi-thong-tin-file" aria-hidden="true">#</a> Hi·ªÉn th·ªã th√¥ng tin file</h3><p>S·ª≠ d·ª•ng nh·ªØng ph∆∞∆°ng th·ª©c ƒë·ªÅ c·∫≠p ·ªü tr√™n nh∆∞ sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">File</span> myFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;kietdeptrai.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>myFile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;T√™n file: &quot;</span> <span class="token operator">+</span> myFile<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ƒê∆∞·ªùng d·∫´n file : &quot;</span> <span class="token operator">+</span> myFile<span class="token punctuation">.</span><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;C√≥ th·ªÉ ghi : &quot;</span> <span class="token operator">+</span> myFile<span class="token punctuation">.</span><span class="token function">canWrite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;C√≥ th·ªÉ ƒë·ªçc : &quot;</span> <span class="token operator">+</span> myFile<span class="token punctuation">.</span><span class="token function">canRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;K√≠ch th∆∞·ªõc file : &quot;</span> <span class="token operator">+</span> myFile<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">else</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;File kh√¥ng t·ªìn t·∫°i&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/*T√™n file: kietdeptrai.txt\n  ƒê∆∞·ªùng d·∫´n file : /Users/zenfection/Desktop/Code/Java/kietdeptrai.txt\n  C√≥ th·ªÉ ghi : true\n  C√≥ th·ªÉ ƒë·ªçc : true\n  K√≠ch th∆∞·ªõc file : 40              */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">‚ö†Ô∏è L∆ØU √ù</p><p>C√≥ nhi·ªÅu <code>class</code> s·∫µn trong <code>Java API</code> ƒë·ªÉ thao t√°c tr√™n file nh∆∞ : <code>FileReader</code>, <code>BufferedReader</code>, <code>Files</code>, <code>Scanner</code>, <code>FileInputStream</code>, <code>FileWriter</code>, <code>BufferedWritter</code>, <code>FileOutputStream</code>...</p></div><p>==&gt; B·∫°n h√£y t·ª± t√¨m hi·ªÉu v√† h·ªçc n√≥, b·ªüi v√¨ n√≥ kh√¥ng kh√≥ !!!</p><h2 id="_4-xoa-file" tabindex="-1"><a class="header-anchor" href="#_4-xoa-file" aria-hidden="true">#</a> 4.Xo√° file</h2><p>S·ª≠ d·ª•ng ph∆∞∆°ng th·ª©c <code>delete()</code> ƒë·ªÉ xo√° file</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span> \n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeleteFile</span> <span class="token punctuation">{</span>\n  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span> \n    <span class="token class-name">File</span> myObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;filename.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n    <span class="token keyword">if</span> <span class="token punctuation">(</span>myObj<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> \n      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Xo√° th√†nh c√¥ng file &quot;</span> <span class="token operator">+</span> myObj<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Xo√° file th·∫•t b·∫°i.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> \n  <span class="token punctuation">}</span> \n<span class="token punctuation">}</span>\n<span class="token comment">//Output : Xo√° th√†nh c√¥ng file filename.txt</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">C√≥ th·ªÉ d√πng c√°ch sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span><span class="token punctuation">;</span> \n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeleteFolder</span> <span class="token punctuation">{</span>\n  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span> \n    <span class="token class-name">File</span> myObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\MyName\\\\Test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n    <span class="token keyword">if</span> <span class="token punctuation">(</span>myObj<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> \n      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ƒê√£ xo√° th∆∞ m·ª•c &quot;</span> <span class="token operator">+</span> myObj<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Xo√° th∆∞ m·ª•c th·∫•t b·∫°i&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> \n  <span class="token punctuation">}</span> \n<span class="token punctuation">}</span>\n<span class="token comment">//Output : ƒê√£ xo√° th∆∞ m·ª•c Test</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div><div class="custom-container danger"><p class="custom-container-title">‚ö†Ô∏è L∆ØU √ù</p><p>Nh∆∞ng ph·∫£i th∆∞ m·ª•c tr·ªëng m·ªõi xo√° ƒë∆∞·ª£c nh√© !!!</p></div>',10),h={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("div",e,[c,(0,t._)("p",null,[o,l,i,u,r,(0,t._)("a",k,[d,(0,t.Wm)(a)])]),m]),b],64)}}}}]);