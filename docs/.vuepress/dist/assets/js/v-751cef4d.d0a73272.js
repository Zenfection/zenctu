"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6341],{6764:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-751cef4d",path:"/devbook/java/Advanced/6.html",title:"B√†i 6: HashMap",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.Gi·ªõi thi·ªáu",slug:"_1-gioi-thieu",children:[]},{level:2,title:"2.S·ª≠ d·ª•ng",slug:"_2-su-dung",children:[]}],filePathRelative:"devbook/java/Advanced/6.md",git:{updatedTime:1629908316e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},24464:(n,a,s)=>{s.r(a),s.d(a,{default:()=>v});var t=s(66252);const e=(0,t._)("h1",{id:"bai-6-hashmap",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#bai-6-hashmap","aria-hidden":"true"},"#"),(0,t.Uk)(" B√†i 6: HashMap")],-1),c=(0,t._)("h2",{id:"_1-gioi-thieu",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#_1-gioi-thieu","aria-hidden":"true"},"#"),(0,t.Uk)(" 1.Gi·ªõi thi·ªáu")],-1),p=(0,t.Uk)("Trong b√†i "),o=(0,t.Uk)("ArrayList"),l=(0,t.Uk)(", n√≥ l∆∞u tr·ªØ ph·∫ßn t·ª≠ theo th·ª© t·ª± ch·ªâ m·ª•c b·∫Øt ƒë·∫ßu t·ª´ "),u=(0,t._)("strong",null,"0",-1),i=(0,t.Uk)(", n·∫øu b·∫°n mu·ªën truy c·∫≠p ph·∫ßn t·ª≠ ng·∫ßu nhi√™n th√¨ s·ª≠ d·ª•ng ch·ªâ m·ª•c ("),r=(0,t._)("em",null,"s·ªë nguy√™n",-1),d=(0,t.Uk)(") c·ªßa n√≥ ==> "),k=(0,t._)("code",null,"Array[1]",-1),m=(0,t.Uk)(", "),h=(0,t._)("code",null,"Array[3]",-1),g=(0,t.Uk)("...."),b=(0,t.uE)('<div class="custom-container tip"><p class="custom-container-title">üí° <b>HASHMAP</b> L√Ä G√å ?</p><p>L√† b·∫£n ƒë·ªì bƒÉm l∆∞u c√°c ph·∫ßn t·ª≠ d∆∞·ªõi d·∫°ng <code>key/value</code>.</p><ul><li><p>M·ªôt <code>Object</code> s·∫Ω l√†m t·ª´ kho√° t√¨m ki·∫øm cho <code>Object</code> kh√°c.</p></li><li><p>C√≥ th·ªÉ l∆∞u tr·ªØ b·∫±ng nhi·ªÅu ki·ªÉu d·ªØ li·ªáu l√†m <code>key</code> nh∆∞ : <code>String</code>, <code>Integer</code>...</p></li></ul></div><p>S·ª≠ d·ª•ng <code>HashMap</code> trong g√≥i <code>java.util.HashMap</code> nh∆∞ sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span><span class="token punctuation">;</span>\n\n<span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> animals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">V√ç D·ª§</p><p><code>Integer</code> l√† <code>key</code> c√≤n <code>String</code> l√† <code>value</code></p><p><strong>Debug ra nh∆∞ sau :</strong></p><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/10-10-01-35-AÃânh chuÃ£p MaÃÄn hiÃÄnh 2021-02-10 luÃÅc 10.01.28.png"></div><h2 id="_2-su-dung" tabindex="-1"><a class="header-anchor" href="#_2-su-dung" aria-hidden="true">#</a> 2.S·ª≠ d·ª•ng</h2><p>Cho tr∆∞·ªõc m·ªôt ƒëo·∫°n code sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> animals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><p>üî• Ta t·∫°o m·ªôt ƒë·ªëi t∆∞·ª£ng <code>animals</code>, c√≥ <code>key</code> v√† <code>value</code> l√† ki·ªÉu <code>String</code>.</p></blockquote><br><table><thead><tr><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-29-55-icons8-settings.png">Ph∆∞∆°ng th·ª©c</th><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-30-07-icons8-handle_with_care.png">M√¥ t·∫£</th><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-54-19-icons8-drawing_process.png">V√≠ d·ª•</th></tr></thead><tbody><tr><td>put(&quot;x&quot;,&quot;y&quot;)</td><td>Th√™m m·ªôt ph·∫ßn t·ª≠ v·ªõi chu·ªói <strong>x</strong>¬†l√† <code>key</code>, chu·ªói <strong>y</strong>¬†l√† value</td><td><code>animals.put(&quot;cat&quot;,&quot;m√®o&quot;)</code><br>‚á® key : &quot;cat&quot;<br>value : &quot;m√®o&quot;</td></tr><tr><td>get(&quot;x&quot;)</td><td>L·∫•y <code>value</code>¬†d·ª±a theo <code>key</code></td><td><code>animals.get(&quot;cat&quot;)</code>¬†<br>‚á® m√®o</td></tr><tr><td>remove(&quot;x&quot;)</td><td>Xo√° ph·∫ßn t·ª≠ b·∫±ng <code>value</code></td><td><code>animals.remove(&quot;cat&quot;)</code>¬†<br>‚á® m√®o ƒë√£ b·ªã xo√°</td></tr><tr><td>clear()</td><td>Xo√° t·∫•t c·∫£ ph·∫ßn t·ª≠</td><td><code>animals.clear()</code><br>‚á® t·∫•t c·∫£ ph·∫ßn t·ª≠ kh√¥ng c√≤n n·ªØa</td></tr><tr><td>size()</td><td>Tr·∫£ v·ªÅ s·ªë ph·∫ßn t·ª≠ hi·ªán c√≥</td><td><code>animals.size()</code><br>‚á® 1</td></tr><tr><td>keySet()<br>values()&lt;&gt;</td><td>L·∫•y <code>key</code>¬†c·ªßa <code>HashMap</code><br>L·∫•y <code>value</code>¬†c·ªßa <code>HashMap</code></td><td><code>animals.keySet()</code><br>‚á® cat<br><code>animals.values()</code><br>‚á® m√®o</td></tr></tbody></table><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-35-17-icons8-search_more.png" width="25"> Duy·ªát qua m·ªôt <code>HashMap</code></summary><p>B·∫°n c√≥ th·ªÉ d√πng v√≤ng l·∫∑p ƒë·ªÉ duy·ªát qua <code>HashMap</code> theo 2 c√°ch sau :</p><ul><li><p><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-56-46-icons8-key.png" width="23"> <b>Duy·ªát b·∫±ng key</b></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> index <span class="token operator">:</span> animals<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-56-47-icons8-approximately_equal.png" width="23"> <b>Duy·ªát b·∫±ng value</b></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> index <span class="token operator">:</span> animals<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul></details>',11),v={render:function(n,a){const s=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[e,c,(0,t._)("p",null,[p,(0,t.Wm)(s,{to:"/language/Java/Advanced/4.html"},{default:(0,t.w5)((()=>[o])),_:1}),l,u,i,r,d,k,m,h,g]),b],64)}}}}]);