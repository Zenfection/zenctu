"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[475],{209:(n,t,a)=>{a.r(t),a.d(t,{data:()=>s});const s={key:"v-447b1ff8",path:"/devbook/java/Basic/9.html",title:"Bài 9: Chuỗi",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.Các phướng thức thông dụng trong chuỗi",slug:"_1-cac-phuong-thuc-thong-dung-trong-chuoi",children:[]},{level:2,title:"2.Tổng hợp các phương thức trong String",slug:"_2-tong-hop-cac-phuong-thuc-trong-string",children:[]}],filePathRelative:"devbook/java/Basic/9.md",git:{updatedTime:1629908316e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},53310:(n,t,a)=>{a.r(t),a.d(t,{default:()=>Bn});var s=a(66252);const e=(0,s.uE)('<h1 id="bai-9-chuoi" tabindex="-1"><a class="header-anchor" href="#bai-9-chuoi" aria-hidden="true">#</a> Bài 9: Chuỗi</h1><p><code>String</code> (<em>chuỗi</em>) : sử dụng để lưu trữ văn bản, như sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> myName <span class="token operator">=</span> <span class="token string">&quot;Lê Tuấn Kiệt&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Tôi tên là &quot;</span> <span class="token operator">+</span> myName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// output : Tôi tên là Lê Tuấn Kiệt</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="custom-container tip"><p class="custom-container-title"><code>METHODS</code> PHỔ BIẾN TRONG STRING</p><ul><li><code>length()</code> : <em>độ dài chuỗi</em></li><li><code>toUpperCase()</code> và <code>toLowerCase()</code> : <em>chuyển sang</em> <strong>in thường</strong> <em>và</em> <strong>IN HOA</strong></li><li><code>indexOf()</code> : <em>trả về vị trí đầu tiên của chuỗi tìm được</em></li><li><code>concat()</code> : <em>nối chuỗi lại với nhau</em></li></ul></div><h2 id="_1-cac-phuong-thuc-thong-dung-trong-chuoi" tabindex="-1"><a class="header-anchor" href="#_1-cac-phuong-thuc-thong-dung-trong-chuoi" aria-hidden="true">#</a> 1.Các phướng thức thông dụng trong chuỗi</h2><div class="custom-container tip"><p class="custom-container-title"><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/01-15-18-34-Science.png" width="35"> <b>Độ dài chuỗi (<code>length</code>)</b> :</p><p>Sử dụng <code>Methods</code> (<em>phương thức</em>) <code>length()</code> để kiểm tra độ dài của chuỗi :</p><details class="custom-container details"><summary><b><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/01-15-08-13-Specialization.png" width="25"> Cụ thể</b></summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> myName <span class="token operator">=</span> <span class="token string">&quot;Lê Tuấn Kiệt&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Độ dài tên của tôi là &quot;</span> <span class="token operator">+</span> myName<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// output : Độ dài tên của tôi là 12</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>💡 Để sử dụng <code>method</code> thì các bạn <code>.</code> phía sau một <code>Object</code> là được nha, ví dụ như <code>myName.length()</code></p><ul><li><code>myName</code> là <code>Object</code></li><li><code>length()</code> là phương thức</li></ul></details></div><div class="custom-container tip"><p class="custom-container-title"><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/01-15-18-34-Science.png" width="35"> <b>Chuyển đổi chuỗi (<code>convert String</code>)</b></p><ul><li><code>toUpperCase()</code> : chuyển thành in HOA</li><li><code>toLowerCase()</code> : chuyển thành in thường</li></ul><details class="custom-container details"><summary><b><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/01-15-08-13-Specialization.png" width="25"> Cụ thể</b></summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> myName <span class="token operator">=</span> <span class="token string">&quot;LÊ TUẤN KIỆT&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name">String</span> myNickName <span class="token operator">=</span> <span class="token string">&quot;zenfection&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Chuyển in thường</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myName<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// chuyển in hoa</span>\n<span class="token comment">/* output : \nlê tuấn kiệt\nZENFECTION   */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></details></div><div class="custom-container tip"><p class="custom-container-title"><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/01-15-18-34-Science.png" width="35"> <b>Tìm chữ cái đầu trong chuỗi</b></p><p>Sử dụng <code>indexOf()</code> để trả về vị trí đầu tiên trong chuỗi, bao gồm cả <em>khoảng trắng</em></p><blockquote><p>⚠️ Chuỗi ký tự đầu tiên bắt đầu từ <code>0</code> nhé.</p></blockquote><details class="custom-container details"><summary><b><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/01-15-08-13-Specialization.png" width="25"> Cụ thể</b></summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> myName <span class="token operator">=</span> <span class="token string">&quot;Tuấn Kiệt&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;chữ Kiệt ở vị trí thứ &quot;</span> <span class="token operator">+</span> myName<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;Kiệt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// output : chữ Tuấn ở vị trí số 5</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><table><thead><tr><th>Ký tự</th><th>T</th><th>u</th><th>ấ</th><th>n</th><th>&quot; &quot;</th><th>K</th><th>i</th><th>ệ</th><th>t</th></tr></thead><tbody><tr><td>Vị trí</td><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td></tr></tbody></table><blockquote><p>💡 Như bạn đã thấy thì nó sẽ trả về vị trí của chữ <code>K</code> trong chuỗi <code>Kiệt</code>.</p></blockquote><blockquote><p>⚠️ Trường hợp lưu ý :</p><ul><li>Nếu có 2 chữ <code>Kiệt</code>, nó vẫn trả về vị trí của chữ <code>Kiệt</code> đầu tiên.</li><li>Nếu chữ <code>Kiệt</code> không tồn tại nó sẽ trả về <code>-1</code>.</li></ul></blockquote></details></div><div class="custom-container tip"><p class="custom-container-title"><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/01-15-18-34-Science.png" width="35"> <b>Nối chuỗi với nhau</b></p><ul><li>Sử dụng dấu <code>+</code> như các bài trước :</li></ul><details class="custom-container details"><summary><b><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/01-15-08-13-Specialization.png" width="25"> Cụ thể</b></summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> myName <span class="token operator">=</span> <span class="token string">&quot;Tuấn Kiệt&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name">String</span> firstName <span class="token operator">=</span> <span class="token string">&quot;Lê&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Tên của tôi là : &quot;</span> <span class="token operator">+</span> fisrtName <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> myName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// output: Tên của tôi là Lê Tuấn Kiệt</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></details></div><div class="custom-container tip"><p class="custom-container-title"><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/01-15-18-34-Science.png" width="35"> <b>Nối chuỗi với nhau</b></p><ul><li>Sử dụng phương thức <code>concat()</code> để nối 2 chuỗi :</li></ul><details class="custom-container details"><summary><b><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/01-15-08-13-Specialization.png" width="25"> Cụ thể</b></summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> myName <span class="token operator">=</span> <span class="token string">&quot;Tuấn Kiệt&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name">String</span> firstName <span class="token operator">=</span> <span class="token string">&quot;Lê&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Tên của tôi là : &quot;</span> <span class="token operator">+</span> firstName<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>myName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//output : Tên của tôi là Lê Tuấn Kiệt</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>⚠️ Có thể sử dụng nhiều phương thức <code>concat()</code> để nối nhiều chuỗi với nhau :</p></blockquote></details></div><div class="custom-container warning"><p class="custom-container-title">⚠️ <b>Lưu ý đặc biệt</b></p><p>Nếu chúng ta muốn viết những ký tự đặc biệt được quy định bởi <code>Java</code> như <code>&quot;&quot;</code></p><img title="" src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/01/31-12-56-52-java-oop_7.png" alt="java-oop_7.png" width="440"><p>==&gt; Đó là một một lỗi bởi vì máy không hiểu đã mặc định <code>&quot; &quot;</code> là ký tự đặc biệt.</p></div><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/01-15-08-13-Specialization.png" width="25"> MẸO GIẢI QUYẾT</summary><p>Sử dụng dấu <code>\\</code> trước <strong>ký tự đặc biệt</strong> :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">String</span> myName <span class="token operator">=</span> <span class="token string">&quot;Tôi tên là \\&quot;Lê Tuấn Kiệt\\&quot;&quot;</span><span class="token punctuation">;</span>\n<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>myName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//output : Tôi tên là &quot;Lê Tuấn Kiệt&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details>',12),l={class:"custom-container tip"},c=(0,s.uE)('<p class="custom-container-title">💡 QUY ƯỚC</p><table><thead><tr><th>Ký tự đặc biệt</th><th>cách viết</th></tr></thead><tbody><tr><td>&#39; &#39;</td><td><code>\\&#39;\\&#39;</code></td></tr><tr><td>&quot; &quot;</td><td><code>\\&quot;\\&quot;</code></td></tr><tr><td>\\</td><td><code>\\\\</code></td></tr></tbody></table><p>💡 Chúng ta có các kiểu ký tự đặc biệt mà bạn <strong>cần phải biết</strong> :</p><table><thead><tr><th>Ký tự đặc biệt</th><th>Mô tả</th></tr></thead><tbody><tr><td>\\n</td><td>New Line</td></tr><tr><td>\\r</td><td>Carriage return</td></tr><tr><td>\\t</td><td>Tab</td></tr><tr><td>\\b</td><td>Backspace</td></tr><tr><td>\\f</td><td>Form Feed</td></tr></tbody></table>',4),o={class:"custom-container details"},u=(0,s._)("summary",null,[(0,s._)("b",null,[(0,s._)("img",{src:"https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/01-15-08-13-Specialization.png",width:"25"}),(0,s.Uk)(" Giải thích cụ thể : ")])],-1),i=(0,s._)("code",null,"\\n",-1),p=(0,s.Uk)(" và "),r=(0,s._)("code",null,"\\r",-1),d=(0,s.Uk)(" có chung chức năng xuống dòng ("),m=(0,s._)("em",null,[(0,s.Uk)("khuyến kích dùng "),(0,s._)("code",null,"\\n")],-1),h=(0,s.Uk)("), nhưng chúng có tý khác nhau, xem "),k={href:"https://www.it-swarm-vi.com/vi/java/su-khac-biet-giua-cac-ky-tu-char-n-va-r-trong-java-la-gi/942391502/",target:"_blank",rel:"noopener noreferrer"},_=(0,s.Uk)("tại đây"),g=(0,s.uE)('<div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Tôi tên là\\nLê Tuấn Kiệt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">/* Output : Tôi tên là\nLê Tuấn Kiệt */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',1),b=(0,s.uE)('<li><p><code>\\t</code> để cách khoảng lớn :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Sử dụng tab để\\t cách khoảng lớn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//output : Sử dụng tab để   cách khoảng lớn</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p><code>\\b</code> đặt ở đầu từ và cuối từ, để cho hiểu đó là một từ, như <code>\\bKiet\\b</code> là <code>Kiet</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\\bLê \\b \\b Tuấn \\b \\b Kiệt \\b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">//output : Lê Tuấn Kiệt</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p><code>\\f</code> xuống dòng nhưng không thụt vô đầu dòng :</p></li><li><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Tôi tên là \\fLê Tuấn Kiệt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">/* Tôi tên là \n            Lê Tuấn Kiệt */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li>',4),v=(0,s._)("h2",{id:"_2-tong-hop-cac-phuong-thuc-trong-string",tabindex:"-1"},[(0,s._)("a",{class:"header-anchor",href:"#_2-tong-hop-cac-phuong-thuc-trong-string","aria-hidden":"true"},"#"),(0,s.Uk)(" 2.Tổng hợp các phương thức trong "),(0,s._)("code",null,"String")],-1),U=(0,s._)("thead",null,[(0,s._)("tr",null,[(0,s._)("th",null,"Phương thức"),(0,s._)("th",null,"Mô tả"),(0,s._)("th",null,"Trả về"),(0,s._)("th",null,[(0,s.Uk)("Ví dụ ("),(0,s._)("code",null,"Name"),(0,s.Uk)("="),(0,s._)("code",null,"Hello"),(0,s.Uk)(")")]),(0,s._)("th",null,"Lưu ý")])],-1),y=(0,s._)("tr",null,[(0,s._)("td",null,[(0,s.Uk)("charAt("),(0,s._)("em",null,"p"),(0,s.Uk)(")"),(0,s._)("br")]),(0,s._)("td",null,[(0,s.Uk)("trả về "),(0,s._)("strong",null,"chữ cái"),(0,s.Uk)(" được chỉ định vị trí")]),(0,s._)("td",null,"char"),(0,s._)("td",null,[(0,s._)("code",null,"Name.charAt[1]"),(0,s.Uk)(" "),(0,s._)("br"),(0,s.Uk)("⇨ e")]),(0,s._)("td")],-1),q=(0,s._)("tr",null,[(0,s._)("td",null,[(0,s.Uk)("codePointAt("),(0,s._)("em",null,"p"),(0,s.Uk)(")"),(0,s._)("br"),(0,s.Uk)("codePointBefore("),(0,s._)("em",null,"p"),(0,s.Uk)(")")]),(0,s._)("td",null,[(0,s.Uk)("trả về số bảng mã "),(0,s._)("code",null,"Unicode")]),(0,s._)("td",null,"int"),(0,s._)("td",null,[(0,s._)("code",null,"Name.codePointAt(0)"),(0,s.Uk)(" "),(0,s._)("br"),(0,s.Uk)("⇨ 72"),(0,s._)("br"),(0,s._)("code",null,"Name.codePointBefore(1)"),(0,s.Uk)(" "),(0,s._)("br"),(0,s.Uk)("⇨ 72"),(0,s._)("br")]),(0,s._)("td",null,[(0,s.Uk)("⚠️ "),(0,s._)("code",null,"codePointAt"),(0,s.Uk)(" bắt đầu bằng "),(0,s._)("em",null,"0"),(0,s._)("br"),(0,s.Uk)("⚠️ "),(0,s._)("code",null,"codePointBefore"),(0,s.Uk)(" bắt đầu bằng "),(0,s._)("em",null,"1")])],-1),f=(0,s._)("tr",null,[(0,s._)("td",null,[(0,s.Uk)("codePointCount("),(0,s._)("em",null,"a,b"),(0,s.Uk)(")")]),(0,s._)("td",null,[(0,s.Uk)("trả về số lượng "),(0,s._)("code",null,"Unicode"),(0,s.Uk)(" từ "),(0,s._)("em",null,"a tới b")]),(0,s._)("td",null,"int"),(0,s._)("td",null,[(0,s._)("code",null,"Name.codePointCount(0,3)"),(0,s.Uk)(" "),(0,s._)("br"),(0,s.Uk)("⇨ 3")]),(0,s._)("td")],-1),S=(0,s._)("tr",null,[(0,s._)("td",null,[(0,s.Uk)("compareTo(x)"),(0,s._)("br"),(0,s.Uk)("compareToIgnoreCase(x)")]),(0,s._)("td",null,"So sánh  2 chuỗi"),(0,s._)("td",null,"int"),(0,s._)("td",null,[(0,s._)("code",null,'Name.compareTo("Hello")'),(0,s.Uk)(" "),(0,s._)("br"),(0,s.Uk)("⇨ 0"),(0,s._)("br"),(0,s._)("code",null,'Name.compareToIgnoreCase("HELLO")'),(0,s.Uk)(" "),(0,s._)("br"),(0,s.Uk)("⇨ 0")]),(0,s._)("td",null,[(0,s.Uk)("⚠️ Nếu đúng sẽ trả về "),(0,s._)("code",null,"0"),(0,s.Uk)(", sai sẽ trả về khác "),(0,s._)("code",null,"0"),(0,s._)("br"),(0,s.Uk)("⚠️ "),(0,s._)("code",null,"compareToIgnoreCase"),(0,s.Uk)(" không phân biệt "),(0,s._)("em",null,"hoa thường")])],-1),N=(0,s._)("tr",null,[(0,s._)("td",null,[(0,s.Uk)("equal(x)"),(0,s._)("br"),(0,s.Uk)("equalIgnoreCase(x)")]),(0,s._)("td",null,"So sánh 2 chuỗi"),(0,s._)("td",null,"boolean"),(0,s._)("td",null,[(0,s._)("code",null,'Name.equal("Hello")'),(0,s.Uk)(" "),(0,s._)("br"),(0,s.Uk)("⇨ true"),(0,s._)("br"),(0,s._)("code",null,'Name.equalIgnoreCase("HELLO")'),(0,s.Uk)(" "),(0,s._)("br"),(0,s.Uk)("⇨ true")]),(0,s._)("td",null,[(0,s.Uk)("⚠️ Nếu đúng sẽ trả về "),(0,s._)("code",null,"true"),(0,s.Uk)(", sai sẽ trả về khác "),(0,s._)("code",null,"false"),(0,s._)("br"),(0,s.Uk)("⚠️"),(0,s._)("code",null,"equalIgnoreCase"),(0,s.Uk)(" không phân biệt "),(0,s._)("em",null,"hoa thường")])],-1),x=(0,s._)("td",null,"matches(x)",-1),C=(0,s._)("td",null,"tìm kiếm theo biểu thức chính quy",-1),w=(0,s._)("td",null,"boolean",-1),T=(0,s._)("td",null,[(0,s._)("code",null,'Name.matches("He(.*)")'),(0,s._)("br"),(0,s.Uk)("⇨ true")],-1),j=(0,s.Uk)("💡 Tìm hiểu biểu thức chính quy "),B={href:"https://www.google.com/search?q=regular+expression&oq=regular+expression&aqs=chrome..69i57j69i60&sourceid=chrome&ie=UTF-8",target:"_blank",rel:"noopener noreferrer"},L=(0,s.Uk)("tại đây"),K=(0,s._)("br",null,null,-1),I=(0,s.Uk)("💡 Học hàm "),O=(0,s._)("code",null,"regionMatches()",-1),H=(0,s.Uk)(" "),A={href:"https://vietjack.com/java/string_regionmatches_trong_java.jsp",target:"_blank",rel:"noopener noreferrer"},E=(0,s.Uk)("tại đây"),Z=(0,s._)("tr",null,[(0,s._)("td",null,"concat(x)"),(0,s._)("td",null,"nối 2 chuỗi"),(0,s._)("td",null,"String"),(0,s._)("td",null,[(0,s._)("code",null,'Name.concat("World")'),(0,s.Uk)(" "),(0,s._)("br"),(0,s.Uk)("⇨ Hello World")]),(0,s._)("td")],-1),W=(0,s._)("tr",null,[(0,s._)("td",null,[(0,s.Uk)("toLowerCase()"),(0,s._)("br"),(0,s.Uk)("toUpperCase()")]),(0,s._)("td",null,[(0,s.Uk)("Chuyển chuỗi "),(0,s._)("strong",null,"in thường"),(0,s._)("br"),(0,s.Uk)("Chuyển chuỗi "),(0,s._)("strong",null,"IN HOA")]),(0,s._)("td",null,"String"),(0,s._)("td",null,[(0,s._)("code",null,"Name.toLowerCase()"),(0,s._)("br"),(0,s.Uk)("⇨ hello"),(0,s._)("br"),(0,s._)("code",null,"Name.toUpperCase()"),(0,s._)("br"),(0,s.Uk)("⇨ HELLO")]),(0,s._)("td")],-1),P=(0,s._)("tr",null,[(0,s._)("td",null,[(0,s.Uk)("contains(x)"),(0,s._)("br"),(0,s.Uk)("contentEquals(x)")]),(0,s._)("td",null,[(0,s.Uk)("kiểm tra chuỗi có chứa ký tự "),(0,s._)("strong",null,"x"),(0,s._)("br"),(0,s.Uk)("kiểm tra chuỗi chứa "),(0,s._)("em",null,"chuỗi"),(0,s.Uk)(" "),(0,s._)("strong",null,"x")]),(0,s._)("td",null,"boolean"),(0,s._)("td",null,[(0,s._)("code",null,'Name.contains("el")'),(0,s._)("br"),(0,s.Uk)("⇨ true"),(0,s._)("br"),(0,s._)("br"),(0,s._)("code",null,'Name.contentEquals("el")'),(0,s._)("br"),(0,s.Uk)(" ⇨ false"),(0,s._)("br"),(0,s._)("code",null,'Name.contentEquals("Hello")'),(0,s._)("br"),(0,s.Uk)(" ⇨ true")]),(0,s._)("td")],-1),z=(0,s._)("tr",null,[(0,s._)("td",null,[(0,s.Uk)("startsWith(x)"),(0,s._)("br"),(0,s.Uk)("endsWith(x)")]),(0,s._)("td",null,[(0,s.Uk)("kiểm rta chuỗi "),(0,s._)("strong",null,"bắt đầu"),(0,s.Uk)(" bằng chuỗi "),(0,s._)("strong",null,"x"),(0,s._)("br"),(0,s.Uk)("kiểm tra chuỗi bắt đầu bằng chuỗi "),(0,s._)("strong",null,"x")]),(0,s._)("td",null,"boolean"),(0,s._)("td",null,[(0,s._)("code",null,'Name.startsWith("He")'),(0,s._)("br"),(0,s.Uk)(" ⇨ true"),(0,s._)("br"),(0,s._)("code",null,'Name.startsWith("llo")'),(0,s._)("br"),(0,s.Uk)(" ⇨ false"),(0,s._)("br"),(0,s._)("br"),(0,s._)("code",null,'Name.endsWith("He")'),(0,s._)("br"),(0,s.Uk)(" ⇨ false"),(0,s._)("br"),(0,s._)("code",null,'Name.endsWith("llo")'),(0,s._)("br"),(0,s.Uk)(" ⇨ true")]),(0,s._)("td")],-1),F=(0,s._)("td",null,"hashCode(x)",-1),M=(0,s._)("td",null,[(0,s.Uk)("trả về "),(0,s._)("strong",null,"bảng băm"),(0,s.Uk)(" của chuỗi "),(0,s._)("strong",null,"x")],-1),V=(0,s._)("td",null,"int",-1),G=(0,s._)("td",null,[(0,s._)("code",null,"Name.hashCode()"),(0,s._)("br"),(0,s.Uk)(" ⇨ 69609650")],-1),R=(0,s.Uk)("💡 Tìm hiểu bảng băm "),Y={href:"https://vimentor.com/vi/lesson/ba-ng-bam-hash-table",target:"_blank",rel:"noopener noreferrer"},D=(0,s.Uk)("tại đây"),Q=(0,s._)("tr",null,[(0,s._)("td",null,[(0,s.Uk)("indexOf(x)"),(0,s._)("br"),(0,s.Uk)("lastIndexOf(x)")]),(0,s._)("td",null,[(0,s.Uk)("trả về vị trí ký tự xuất hiện "),(0,s._)("strong",null,"đầu tiên"),(0,s.Uk)(" trong chuỗi "),(0,s._)("strong",null,"x"),(0,s._)("br"),(0,s.Uk)("trả về vị trí ký tự xuất hiện "),(0,s._)("strong",null,"cuồi cùng"),(0,s.Uk)(" trong chuỗi "),(0,s._)("strong",null,"x")]),(0,s._)("td",null,"int"),(0,s._)("td",null,[(0,s._)("code",null,'name.indexOf("l")'),(0,s._)("br"),(0,s.Uk)(" ⇨ 2 "),(0,s._)("br"),(0,s._)("code",null,'name.lastIndexOf("l")'),(0,s._)("br"),(0,s.Uk)("  ⇨ 3")]),(0,s._)("td")],-1),J=(0,s._)("tr",null,[(0,s._)("td",null,[(0,s.Uk)("isEmpty()"),(0,s._)("br"),(0,s.Uk)("isBlank()")]),(0,s._)("td",null,"kiểm tra chuỗi rỗng"),(0,s._)("td",null,"boolean"),(0,s._)("td",null,[(0,s._)("code",null,"Name.isEmpty()"),(0,s._)("br"),(0,s.Uk)(" ⇨ false"),(0,s._)("br"),(0,s._)("code",null,'"".isEmpty'),(0,s._)("br"),(0,s.Uk)(" ⇨ true"),(0,s._)("br"),(0,s._)("br"),(0,s._)("code",null,'"   ".isBlank()'),(0,s._)("br"),(0,s.Uk)(" ⇨ true")]),(0,s._)("td",null,[(0,s.Uk)("⚠️ "),(0,s._)("code",null,"isBlank"),(0,s.Uk)(" kiểm tra chuỗi rỗng không tính "),(0,s._)("em",null,"khoảng trắng")])],-1),X=(0,s._)("tr",null,[(0,s._)("td",null,"length(x)"),(0,s._)("td",null,"trả về độ dài chuỗi"),(0,s._)("td",null,"int"),(0,s._)("td",null,[(0,s._)("code",null,"Name.length()"),(0,s._)("br"),(0,s.Uk)(" ⇨ 5")]),(0,s._)("td")],-1),$=(0,s._)("tr",null,[(0,s._)("td",null,[(0,s.Uk)("replace(x,y)"),(0,s._)("br"),(0,s.Uk)("replaceFirst(x,y)"),(0,s._)("br"),(0,s.Uk)("replaceAll(x,y)")]),(0,s._)("td",null,[(0,s.Uk)("trả về chuỗi mới  "),(0,s._)("strong",null,"x"),(0,s.Uk)(" thay bằng "),(0,s._)("strong",null,"y")]),(0,s._)("td",null,"String"),(0,s._)("td",null,[(0,s._)("code",null,"Name.replace('l','p')"),(0,s._)("br"),(0,s.Uk)(" ⇨ Heppo"),(0,s._)("br"),(0,s._)("code",null,'Name.replaceFirst("l","paa")'),(0,s.Uk)(" "),(0,s._)("br"),(0,s.Uk)(" ⇨ Heppalo"),(0,s._)("br"),(0,s._)("code",null,'Name.replaceAll("llo","ppa")'),(0,s._)("br"),(0,s.Uk)(" ⇨ Heppa")]),(0,s._)("td",null,[(0,s.Uk)("⚠️ Đối số của"),(0,s._)("code",null,"replace"),(0,s.Uk)(" là ký tự."),(0,s._)("br"),(0,s.Uk)("⚠️ Đối số của "),(0,s._)("code",null,"replaceFirst"),(0,s.Uk)(" và "),(0,s._)("code",null,"replaceAll"),(0,s.Uk)(" là chuỗi"),(0,s._)("br"),(0,s.Uk)("⚠️  "),(0,s._)("code",null,"replaceFirst"),(0,s.Uk)(" chỉ thay đổi chuỗi "),(0,s._)("strong",null,"x"),(0,s.Uk)(" đầu tiên.")])],-1),nn=(0,s._)("tr",null,[(0,s._)("td",null,"split(x)"),(0,s._)("td",null,[(0,s.Uk)("Chuyển "),(0,s._)("strong",null,"chuỗi"),(0,s.Uk)(" thành "),(0,s._)("strong",null,"mảng chuỗi"),(0,s.Uk)(" bằng nhận biết x")]),(0,s._)("td",null,"String[]"),(0,s._)("td",null,[(0,s._)("code",null,'String [] ArrayName = Name.split("")'),(0,s._)("br"),(0,s.Uk)(' ⇨ ArrayName ={"H","e","l","l","o"}')]),(0,s._)("td",null,[(0,s.Uk)("💡 Bạn có thể thay thế chuỗi "),(0,s._)("strong",null,"x"),(0,s.Uk)(", làm điểm tách chuỗi")])],-1),tn=(0,s._)("td",null,[(0,s.Uk)("subSequence(a,b)"),(0,s._)("br")],-1),an=(0,s._)("td",null,[(0,s.Uk)("Trả về chuỗi ký tự mới lấy từ chuỗi gốc vị trí "),(0,s._)("em",null,"a tới b")],-1),sn=(0,s._)("td",null,"CharSequence",-1),en=(0,s._)("td",null,[(0,s._)("code",null,"CharSequence word"),(0,s._)("br"),(0,s._)("code",null,"= Name.subSequence(0,2)"),(0,s._)("br"),(0,s.Uk)(' ⇨ word = "He"')],-1),ln=(0,s.Uk)("🤔 Sự khác biệt giữa "),cn=(0,s._)("code",null,"String",-1),on=(0,s.Uk)(" và "),un=(0,s._)("code",null,"CharSquence",-1),pn=(0,s.Uk)(" "),rn={href:"https://www.it-swarm-vi.com/vi/java/su-khac-biet-chinh-xac-giua-charsequence-va-string-trong-java/1068529714/#:~:text=CharSequence%20l%C3%A0%20m%E1%BB%99t%20chu%E1%BB%97i%20c%C3%A1c,tr%C3%ACnh%20t%E1%BB%B1%20char%20kh%C3%A1c%20nhau.",target:"_blank",rel:"noopener noreferrer"},dn=(0,s.Uk)("tại đây"),mn=(0,s._)("td",null,"subString(a,b)",-1),hn=(0,s._)("td",null,[(0,s.Uk)("Trả về chuỗi mới lấy từ chuỗi gốc vị trí "),(0,s._)("em",null,"a tới b")],-1),kn=(0,s._)("td",null,"String",-1),_n=(0,s._)("td",null,[(0,s._)("code",null,"String word"),(0,s._)("br"),(0,s._)("code",null,"= Name.subString(0,2)"),(0,s._)("br"),(0,s.Uk)('⇨ word = "He"')],-1),gn=(0,s.Uk)("🤔 Sự khác biệt giữa "),bn=(0,s._)("code",null,"String",-1),vn=(0,s.Uk)(" và "),Un=(0,s._)("code",null,"CharSquence",-1),yn=(0,s.Uk)(),qn={href:"https://www.it-swarm-vi.com/vi/java/su-khac-biet-chinh-xac-giua-charsequence-va-string-trong-java/1068529714/#:~:text=CharSequence%20l%C3%A0%20m%E1%BB%99t%20chu%E1%BB%97i%20c%C3%A1c,tr%C3%ACnh%20t%E1%BB%B1%20char%20kh%C3%A1c%20nhau.",target:"_blank",rel:"noopener noreferrer"},fn=(0,s.Uk)("tại đây"),Sn=(0,s._)("tr",null,[(0,s._)("td",null,"trim()"),(0,s._)("td",null,[(0,s.Uk)("xoá "),(0,s._)("em",null,"khoảng trắng"),(0,s.Uk)(" trong chuỗi")]),(0,s._)("td",null,"String"),(0,s._)("td",null,[(0,s._)("code",null,'"  Zen   ".trim()'),(0,s._)("br"),(0,s.Uk)('⇨ "Zen"')]),(0,s._)("td")],-1),Nn=(0,s._)("tr",null,[(0,s._)("td",null,"toCharArray()"),(0,s._)("td",null,"Chuyển chuỗi thành mảng ký tự"),(0,s._)("td",null,"char[]"),(0,s._)("td",null,[(0,s._)("code",null,"char[] Array = name.toCharArray()"),(0,s._)("br"),(0,s.Uk)("⇨ Array =  {H,e,l,l,o}")]),(0,s._)("td")],-1),xn=(0,s._)("tr",null,[(0,s._)("td",null,[(0,s.Uk)("toString()"),(0,s._)("br"),(0,s.Uk)("valueOf()")]),(0,s._)("td",null,"Chuyển đổi thành chuỗi"),(0,s._)("td",null,"String"),(0,s._)("td",null,[(0,s._)("code",null,"123.toString()"),(0,s._)("br"),(0,s.Uk)('⇨ "123"'),(0,s._)("br"),(0,s._)("br"),(0,s._)("code",null,"String.valueOf(123)"),(0,s._)("br"),(0,s.Uk)('⇨ "123"'),(0,s._)("br"),(0,s._)("code",null,"String.valueOf(null)"),(0,s._)("br"),(0,s.Uk)('⇨ ""')]),(0,s._)("td",null,[(0,s.Uk)("⚠️ Nếu đối số là "),(0,s._)("code",null,"null"),(0,s.Uk)(" thì "),(0,s._)("code",null,"toString()"),(0,s.Uk)(" sẽ lỗi.")])],-1),Cn=(0,s._)("tr",null,[(0,s._)("td",null,"getBytes()"),(0,s._)("td",null,"Mã hoá chuỗi"),(0,s._)("td",null,"byte[]"),(0,s._)("td",null,[(0,s._)("code",null,"byte[] encode = Name.getBytes()"),(0,s.Uk)('⇨ byte = "[B@2f0e140b"')]),(0,s._)("td")],-1),wn=(0,s._)("tr",null,[(0,s._)("td",null,"copyValueOf(x,a,b)"),(0,s._)("td",null,[(0,s.Uk)("trả về chuỗi mới từ mảng ký tự "),(0,s._)("strong",null,"x"),(0,s.Uk)(" vị trí "),(0,s._)("em",null,"a tới b")]),(0,s._)("td",null,"String"),(0,s._)("td",null,[(0,s._)("code",null,"char[] str= {'h','e','l','l','o'}"),(0,s._)("br"),(0,s._)("code",null,'String name = ""'),(0,s._)("br"),(0,s._)("br"),(0,s._)("code",null,"name = name.copyValueOf(str)"),(0,s._)("br"),(0,s.Uk)('⇨ name = "Hello"'),(0,s._)("br"),(0,s._)("code",null,"name = name.copyValueOf(str,0,3)"),(0,s._)("br"),(0,s.Uk)('⇨ name = "hel"')]),(0,s._)("td",null,[(0,s.Uk)("⚠️ Ta có thể 2 "),(0,s._)("strong",null,"form"),(0,s.Uk)(" và nếu copy toàn bộ thì không cần đối số "),(0,s._)("code",null,"a"),(0,s.Uk)(" và "),(0,s._)("code",null,"b")])],-1),Tn=(0,s._)("tr",null,[(0,s._)("td",null,"intern()"),(0,s._)("td"),(0,s._)("td"),(0,s._)("td"),(0,s._)("td")],-1),jn=(0,s._)("tr",null,[(0,s._)("td",null,"offsetByCodePoints()"),(0,s._)("td"),(0,s._)("td"),(0,s._)("td"),(0,s._)("td")],-1),Bn={render:function(n,t){const a=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.iD)(s.HY,null,[e,(0,s._)("div",l,[c,(0,s._)("details",o,[u,(0,s._)("ul",null,[(0,s._)("li",null,[(0,s._)("p",null,[i,p,r,d,m,h,(0,s._)("a",k,[_,(0,s.Wm)(a)])]),g]),b])])]),v,(0,s._)("table",null,[U,(0,s._)("tbody",null,[y,q,f,S,N,(0,s._)("tr",null,[x,C,w,T,(0,s._)("td",null,[j,(0,s._)("a",B,[L,(0,s.Wm)(a)]),K,I,O,H,(0,s._)("a",A,[E,(0,s.Wm)(a)])])]),Z,W,P,z,(0,s._)("tr",null,[F,M,V,G,(0,s._)("td",null,[R,(0,s._)("a",Y,[D,(0,s.Wm)(a)])])]),Q,J,X,$,nn,(0,s._)("tr",null,[tn,an,sn,en,(0,s._)("td",null,[ln,cn,on,un,pn,(0,s._)("a",rn,[dn,(0,s.Wm)(a)])])]),(0,s._)("tr",null,[mn,hn,kn,_n,(0,s._)("td",null,[gn,bn,vn,Un,yn,(0,s._)("a",qn,[fn,(0,s.Wm)(a)])])]),Sn,Nn,xn,Cn,wn,Tn,jn])])],64)}}}}]);