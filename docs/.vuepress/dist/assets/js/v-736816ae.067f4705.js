"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[993],{92901:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-736816ae",path:"/devbook/java/Advanced/5.html",title:"Bài 5: LinkedList",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.Giới thiệu",slug:"_1-gioi-thieu",children:[]},{level:2,title:"2.Sự khác nhau ArrayList và LinkedList",slug:"_2-su-khac-nhau-arraylist-va-linkedlist",children:[{level:3,title:"a.Bản chất của ArrayList",slug:"a-ban-chat-cua-arraylist",children:[]},{level:3,title:"b.Bản chất của LinkedList",slug:"b-ban-chat-cua-linkedlist",children:[]}]},{level:2,title:"3.Phương thức LinkedList phổ biến",slug:"_3-phuong-thuc-linkedlist-pho-bien",children:[]}],filePathRelative:"devbook/java/Advanced/5.md",git:{updatedTime:1629908316e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},84652:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(66252).uE)('<h1 id="bai-5-linkedlist" tabindex="-1"><a class="header-anchor" href="#bai-5-linkedlist" aria-hidden="true">#</a> Bài 5: LinkedList</h1><h2 id="_1-gioi-thieu" tabindex="-1"><a class="header-anchor" href="#_1-gioi-thieu" aria-hidden="true">#</a> 1.Giới thiệu</h2><div class="custom-container tip"><p class="custom-container-title">💡 <b>LINKEDLIST</b> LÀ GÌ ?</p><p><code>LinkedList</code> (<em>danh sách liên kết</em>) : là một danh sách gần giống với <code>ArrayList</code>, sự khác nhau sẽ nói ở bên dưới nhé :</p></div><blockquote><p>💡 Sử dụng <code>LinkedList</code> trong gói <code>java.util.LinkedList</code> như sau :</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">LinkedList</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>\n  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> animals <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    cars<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;mèo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    cars<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;chó&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    cars<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;heo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    cars<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;rắn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cars<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// Output : [mèo,chó,heo,rắn]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">⚠️ LƯU Ý</p><p><code>ArrayList</code> và <code>LinkedList</code> khác nhau về bản chất và mục đích sử dụng.</p></div><h2 id="_2-su-khac-nhau-arraylist-va-linkedlist" tabindex="-1"><a class="header-anchor" href="#_2-su-khac-nhau-arraylist-va-linkedlist" aria-hidden="true">#</a> 2.Sự khác nhau <code>ArrayList</code> và <code>LinkedList</code></h2><div class="custom-container tip"><p class="custom-container-title"><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-31-43-icons8-instagram_check_mark.png" width="25"> FACT</p><p><code>LinkedList</code> và <code>ArrayList</code> bản chất là một tập hợp có thể chứa nhiều <code>Object</code> cùng kiểu dữ liệu.</p></div><h3 id="a-ban-chat-cua-arraylist" tabindex="-1"><a class="header-anchor" href="#a-ban-chat-cua-arraylist" aria-hidden="true">#</a> <img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/08-17-36-14-Professor Male.png" width="35"> a.Bản chất của <code>ArrayList</code></h3><p>Thực chất <code>ArrayList</code> là một mảng thông thường (<em>mảng không tự co dãn được và phải khai báo số lượng trước khi sử dụng</em>).</p><blockquote><p>💡 Giả dụ <code>ArrayList</code> có thể chứa được <code>10 phần tử</code>, nhưng bạn lại thêm phần tử thứ <code>11</code> thì nó sẽ tự tạo ra một <code>ArrayList</code> mới có thể chứa được <code>20</code> tử và sao chép <code>ArrayList</code> cũ và xoá nó.</p></blockquote><h3 id="b-ban-chat-cua-linkedlist" tabindex="-1"><a class="header-anchor" href="#b-ban-chat-cua-linkedlist" aria-hidden="true">#</a> <img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/08-17-36-14-Professor Male.png" width="35"> b.Bản chất của <code>LinkedList</code></h3><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/09-23-23-22-train.png"><p>Bạn cứ tưởng tượng mỗi một dữ liệu là <strong>1 đoàn tàu</strong>, và một một đoạn tàu liên kết với đoàn tàu phía sau nó.</p><blockquote><p>💡 Như hình trên, để thêm đoàn tàu số <code>7</code> thì, đoàn tàu số 6 sẽ tạo thêm một sợi dây xích nối vào đoàn tàu số <code>7</code>.</p></blockquote><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/02-14-14-12-Language%20Learning.png" width="25"> Sử dụng <code>ArrayList</code> hay <code>LinkedList</code> ?</summary><p>Tuỳ vào mục đích của bạn, nhưng tôi sẽ khuyến khích bạn như sau :</p><table><thead><tr><th>So sánh</th><th>ArrayList</th><th>LinkedList</th></tr></thead><tbody><tr><td>Dữ liệu</td><td>nếu bạn muốn truy cập ngẫu nhiên bất kỳ phần tử nào</td><td>nếu bạn chỉ cần truy cập theo tuần tự, 1 rồi 2 rồi 3</td></tr><tr><td>Chỉnh sửa</td><td>nếu bạn ít chỉnh sửa</td><td>nếu bạn cần thêm bớt linh động</td></tr></tbody></table><blockquote><p>💡 Hãy tưởng tượng thế này nhé, trong một lớp học gồm 30 bạn, ta nên dùng ==&gt; <code>ArrayList</code>, vì nếu dùng <code>LinkedList</code> tìm thằng số 18 phải hỏi thằng số 1 là 2 đâu, 3 đâu, rồi tìm tới 17 xong mới ra được thằng 18.</p></blockquote></details><h2 id="_3-phuong-thuc-linkedlist-pho-bien" tabindex="-1"><a class="header-anchor" href="#_3-phuong-thuc-linkedlist-pho-bien" aria-hidden="true">#</a> 3.Phương thức <code>LinkedList</code> phổ biến</h2><p>Trong nhiều trường hợp, <code>ArrayList</code> sẽ hiểu quả hơn trong việc truy cập ngẫu nhiên phần tử, nhưng <code>LinkedList</code> cũng hay lắm, nó có nhiều phương thức hỗ trợ :</p><table><thead><tr><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-29-55-icons8-settings.png">Phương thức</th><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-30-07-icons8-handle_with_care.png">Mô tả</th></tr></thead><tbody><tr><td>addFirst()<br>addLast()</td><td>Thêm phần tử <strong><code>đầu</code></strong> danh sách<br>Thêm phần tử <strong><code>cuối</code></strong> danh sách</td></tr><tr><td>removeFirst()<br>removeLast()</td><td>Xoá phần tử <strong><code>đầu</code></strong> danh sách<br>Xoá phần tử <strong><code>cuối</code></strong> danh sách</td></tr><tr><td>getFirst()<br>getLast()</td><td>Lấy phần tử <strong><code>đầu</code></strong> danh sách<br>Lấy phần tử <strong><code>cuối</code></strong> danh sách</td></tr></tbody></table>',19),e={render:function(n,s){return t}}}}]);