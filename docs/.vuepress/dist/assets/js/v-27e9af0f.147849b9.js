"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6619],{28636:(t,n,a)=>{a.r(n),a.d(n,{data:()=>s});const s={key:"v-27e9af0f",path:"/devbook/java/Advanced/11.html",title:"Bài 11: RegEx",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.Giới thiệu",slug:"_1-gioi-thieu",children:[]},{level:2,title:"2. Sử dụng",slug:"_2-su-dung",children:[{level:3,title:"Mẫu Biểu thức chính quy",slug:"mau-bieu-thuc-chinh-quy",children:[]}]}],filePathRelative:"devbook/java/Advanced/11.md",git:{updatedTime:1629908316e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},81732:(t,n,a)=>{a.r(n),a.d(n,{default:()=>e});const s=(0,a(66252).uE)('<h1 id="bai-11-regex" tabindex="-1"><a class="header-anchor" href="#bai-11-regex" aria-hidden="true">#</a> Bài 11: RegEx</h1><h2 id="_1-gioi-thieu" tabindex="-1"><a class="header-anchor" href="#_1-gioi-thieu" aria-hidden="true">#</a> 1.Giới thiệu</h2><div class="custom-container tip"><p class="custom-container-title">💡 <b>RegEx</b> là gì ?</p><p><code>RegEx</code> là viết tắt của <code>Regular Expression</code> (<em>biểu thức chính quy</em>) là tập hợp một chuỗi ký tự thành một <strong>mẫu tìm kiếm</strong>.</p><ul><li><p>💡 Khi bạn muốn tìm kiếm tất cả file bắt đầu từ <code>e</code> ⇨ <code>e*</code> (<em>sẽ được học bên dưới</em>)</p></li><li><p>🔥 Được sử dụng nhiều trong việc <strong>tìm kiếm</strong> và <strong>thay thế</strong> văn bản</p></li></ul></div><p>Sử dụng gói <code>java.util.regex</code> để sử dụng <em>biểu thức chính quy</em></p><div class="custom-container warning"><p class="custom-container-title">💡 GỒM :</p><ul><li>Lớp <code>Pattern</code> : <em>Xác định một mẫu (hay sử dụng để tìm kiếm)</em></li><li>Lớp <code>Matcher</code> : <em>Dùng để tìm kiếm mẫu</em></li><li>Lớp <code>PatternSyntaxException</code> : <em>Chỉ ra mẫu lỗi cú pháp biểu thức chính quy</em></li></ul></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Matcher</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Pattern</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Pattern</span> pattern <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;kiet&quot;</span><span class="token punctuation">,</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span>CASE_INSENSITIVE<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">Matcher</span> matcher <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span><span class="token string">&quot;kietdeptrai&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>matchFound<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Tìm thấy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">else</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Không Tìm thấy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//Output : Tìm thấy</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">🔥 GIẢI THÍCH</p><ul><li><p>Đầu tiên ta tạo từ khoá tìm kiếm là <code>kiet</code> bằng <code>pattern</code> bằng cách sử dụng phương thức <code>Pattern.compile()</code> :</p></li><li><p>Đối số <strong>1</strong> là từ khoá tìm kiếm</p></li><li><p>Đối số <strong>2</strong> là <code>flag</code> tìm kiếm, ví dụ trên : <code>CASE_INSENSITIVE</code> <em>là không phân biệt hoa thường</em></p></li></ul><blockquote><p>🔥 Phương thức <code>matcher()</code> sử dụng tìm kiếm mẫu trong chuỗi ⇨ trả về một đối tượng <code>Matcher</code> chứa thông tin về tìm kiếm đã thực hiện</p></blockquote><blockquote><p>🔥 Phương thức <code>find()</code> trả về <code>true</code> nếu tìm thấy, <code>false</code> nếu không tìm thấy</p></blockquote></div><h2 id="_2-su-dung" tabindex="-1"><a class="header-anchor" href="#_2-su-dung" aria-hidden="true">#</a> 2. Sử dụng</h2><p>Sử dụng <code>flags</code> trong phương thức <code>compile()</code> để chỉ định cách tìm kiếm, phổ biến như sau :</p><ul><li><code>Pattern.CASE_INSENSITIVE</code> : <em>Trường hợp các chữ cái sẽ bỏ qua (không phân biệt hoa thường)</em></li><li><code>Pattern.LITERAL</code> : <em>Các ký tự đặc biệt sẽ được coi như các ký tự bình thường khi tìm kiếm</em></li><li><code>Pattern.UNICODE_CASE</code> : <em>sử dụng cùng với</em> <code>CASE_INSENSITIVE</code> bỏ qua các trường hợp chữ cái bên ngoài <strong>bảng chữ cái tiếng Anh</strong></li></ul><h3 id="mau-bieu-thuc-chinh-quy" tabindex="-1"><a class="header-anchor" href="#mau-bieu-thuc-chinh-quy" aria-hidden="true">#</a> <img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/08-17-36-14-Professor Male.png" width="35"> Mẫu Biểu thức chính quy</h3><p>Đối số thứ <strong>1</strong> của phương thức <code>Pattern.compile()</code> là mẫu, và bạn có thể áp dụng sau đây :</p><table><thead><tr><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-14-18-12-icons8-math.png">Biểu thức</th><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-30-07-icons8-handle_with_care.png">Mô tả</th></tr></thead><tbody><tr><td>[abc]</td><td>Tìm tất cả ký tựcó chứa abc ở giữa</td></tr><tr><td>[^abc]</td><td>Tìm tất cả ký tự không có abc nằm giữa</td></tr><tr><td>[0-9]</td><td>Tìm tất cả ký tự từ 0 tới 9</td></tr></tbody></table><table><thead><tr><th style="text-align:left;"><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-14-19-05-icons8-developer.png">Metacharacters</th><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-30-07-icons8-handle_with_care.png">Mô tả</th><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-54-19-icons8-drawing_process.png">Ví dụ</th></tr></thead><tbody><tr><td style="text-align:left;"></td><td></td><td>Tìm phù hợp cho bất kỳ các mẫu cách nhau bởi <code>|</code></td></tr><tr><td style="text-align:left;">.</td><td>Bất kỳ ký tự đơn nào</td><td>cat.<br>Hello cat123 ⇨ <code>true</code></td></tr><tr><td style="text-align:left;">^</td><td>Tìm mẫu bắt đầu bằng <code>^</code></td><td>^cat <br>cat Hello World ⇨ <code>true</code></td></tr><tr><td style="text-align:left;">$</td><td>Tìm mẫu cuối bằng <code>$</code></td><td>cat$ <br>Hello World cat ⇨ <code>true</code></td></tr><tr><td style="text-align:left;">\\d<br>\\D</td><td>So khớp ký tự chữ số<br>So khớp ký tự <strong>không phải</strong> là chữ số</td><td>^cat\\\\d<br>cat123 Hello World ⇨ <code>true</code><br><br>^cat\\\\D<br>catHello World ⇨ <code>true</code></td></tr><tr><td style="text-align:left;">\\s<br>\\S</td><td>So khớp bất kỳ ký tự khoảng trống<br>So khớp bất kỳ ký tự <strong>không phải</strong> khoảng trắng</td><td>^cat\\\\s <br>cat Hello World ⇨ <code>true</code><br><br>^cat\\\\S<br>catHello World ⇨ <code>true</code></td></tr><tr><td style="text-align:left;">\\b</td><td>Ranh giới của một từ</td><td></td></tr></tbody></table><table><thead><tr><th>Quantifier</th><th>Mô tả</th></tr></thead><tbody><tr><td>n+</td><td>So khớp chuỗi n xuất hiện 1 lần</td></tr><tr><td>n*</td><td></td></tr><tr><td>n?</td><td></td></tr><tr><td>n{x}</td><td></td></tr><tr><td>n{x,y}</td><td></td></tr><tr><td>n{x,}</td><td></td></tr></tbody></table>',15),e={render:function(t,n){return s}}}}]);