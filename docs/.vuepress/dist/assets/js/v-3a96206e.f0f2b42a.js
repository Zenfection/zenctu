"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1372],{72489:(n,t,s)=>{s.r(t),s.d(t,{data:()=>a});const a={key:"v-3a96206e",path:"/devbook/java/OOP/2.html",title:"Bài 2: Phạm vi truy cập",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"1. Access Modifiers",slug:"_1-access-modifiers",children:[]},{level:2,title:"2. Non-Access Modifiers",slug:"_2-non-access-modifiers",children:[{level:3,title:"💡 GIẢI THÍCH CỤ THỂ",slug:"💡-giai-thich-cu-the",children:[]}]}],filePathRelative:"devbook/java/OOP/2.md",git:{updatedTime:1629908316e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},80719:(n,t,s)=>{s.r(t),s.d(t,{default:()=>E});var a=s(66252);const e=(0,a.uE)('<h1 id="bai-2-pham-vi-truy-cap" tabindex="-1"><a class="header-anchor" href="#bai-2-pham-vi-truy-cap" aria-hidden="true">#</a> Bài 2: Phạm vi truy cập</h1><p>Trong tất cả mọi bài trước, bạn đã rất quen thuộc với <code>public</code> trong ví dụ sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>🔥 Là một từ khoá <code>access modifier</code> (<em>Phạm vi truy cập</em>), sử dụng để đặt các mức độ sử dụng cho <code>classes</code>, <code>attributes</code>, <code>methods</code> và <code>constructors</code>...</p></blockquote><div class="custom-container tip"><p class="custom-container-title">💡 2 LOẠI <b>MODIFIERS</b></p><ul><li><code>Access Modifiers</code> : <em>kiểm soát mức độ truy cập</em></li><li><code>Non-Access Modifiers</code> : <em>không kiểm soát nhưng cung cấp các chức năng khác</em></li></ul></div><h2 id="_1-access-modifiers" tabindex="-1"><a class="header-anchor" href="#_1-access-modifiers" aria-hidden="true">#</a> 1. Access Modifiers</h2><p>🧚‍♂️ <strong>Đối với</strong> <code>classes</code>, bạn có thể sử dụng <code>public</code> và <code>default</code></p>',7),c=(0,a._)("thead",null,[(0,a._)("tr",null,[(0,a._)("th",null,[(0,a._)("img",{src:"https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-28-02-icons8-target.png",width:"25"}),(0,a.Uk)("Modifier")]),(0,a._)("th",null,[(0,a._)("img",{src:"https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-30-07-icons8-handle_with_care.png"}),(0,a.Uk)("Mô tả")]),(0,a._)("th",null,"⚠️ Lưu ý")])],-1),o=(0,a._)("tr",null,[(0,a._)("td",null,"public"),(0,a._)("td",null,[(0,a._)("code",null,"class"),(0,a.Uk)(" có thể được truy cập bởi bất kỳ "),(0,a._)("code",null,"class"),(0,a.Uk)(" nào khác")]),(0,a._)("td")],-1),l=(0,a._)("td",null,"default",-1),i=(0,a._)("td",null,[(0,a._)("code",null,"class"),(0,a.Uk)(" chỉ được truy cập bởi "),(0,a._)("code",null,"class"),(0,a.Uk)(" chung "),(0,a._)("code",null,"package")],-1),u=(0,a.Uk)("💡 Tìm hiểu "),d=(0,a._)("code",null,"package",-1),p=(0,a.Uk)(" tại bài "),r={href:"https://github.com/Zenfection/Java/blob/master/Java%20OOP/3.Pkg%26Encapsulation.md",target:"_blank",rel:"noopener noreferrer"},h=(0,a.Uk)("Package và Tính đóng gói"),m=(0,a._)("p",null,[(0,a.Uk)("🧚‍♂️ "),(0,a._)("strong",null,"Đối với"),(0,a.Uk)(),(0,a._)("code",null,"attributes"),(0,a.Uk)(", "),(0,a._)("code",null,"methods"),(0,a.Uk)(", "),(0,a._)("code",null,"constructors"),(0,a.Uk)(" bạn có thể sử dụng như sau:")],-1),k=(0,a._)("thead",null,[(0,a._)("tr",null,[(0,a._)("th",null,[(0,a._)("img",{src:"https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-28-02-icons8-target.png",width:"25"}),(0,a.Uk)("Modifier")]),(0,a._)("th",null,[(0,a._)("img",{src:"https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-30-07-icons8-handle_with_care.png"}),(0,a.Uk)("Mô tả")]),(0,a._)("th",null,"⚠️ Lưu ý")])],-1),b=(0,a._)("tr",null,[(0,a._)("td",null,"public"),(0,a._)("td",null,[(0,a._)("code",null,"code"),(0,a.Uk)(" có thể truy cập cho tất cả "),(0,a._)("code",null,"classes")]),(0,a._)("td")],-1),g=(0,a._)("tr",null,[(0,a._)("td",null,"private"),(0,a._)("td",null,[(0,a._)("code",null,"code"),(0,a.Uk)(" chỉ có thể truy cập trong "),(0,a._)("code",null,"class"),(0,a.Uk)(" đã khai báo ("),(0,a._)("em",null,"xem bài"),(0,a.Uk)(")")]),(0,a._)("td")],-1),_=(0,a._)("td",null,"default",-1),v=(0,a._)("td",null,[(0,a._)("code",null,"code"),(0,a.Uk)(" chỉ có thể truy cập trong cùng "),(0,a._)("code",null,"package"),(0,a.Uk)(" ("),(0,a._)("em",null,"xem package tại"),(0,a.Uk)(")")],-1),f=(0,a.Uk)("💡Tìm hiểu "),y=(0,a._)("code",null,"package",-1),U=(0,a.Uk)(" tại bài "),w={href:"https://github.com/Zenfection/Java/blob/master/Java%20OOP/3.Pkg%26Encapsulation.md",target:"_blank",rel:"noopener noreferrer"},I=(0,a.Uk)("Package và Tính đóng gói"),M=(0,a._)("td",null,"protected",-1),O=(0,a._)("td",null,[(0,a._)("code",null,"code"),(0,a.Uk)(" có thể truy cập trong cùng "),(0,a._)("code",null,"package"),(0,a.Uk)(" và "),(0,a._)("code",null,"subclasses"),(0,a.Uk)(" ("),(0,a._)("em",null,"class con"),(0,a.Uk)(").")],-1),P=(0,a.Uk)("💡 Tìm hiểu về kế thừa tại bài "),Z={href:"https://github.com/Zenfection/Java/blob/master/Java%20OOP/4.Inheritance%26Polymorphism.md",target:"_blank",rel:"noopener noreferrer"},j=(0,a.Uk)("Tính kế thừa và Đa hình"),T=(0,a.uE)('<div class="custom-container tip"><p class="custom-container-title">💡 MẸO HIỂU</p><ul><li><p><code>public</code> là công khai truy cập được mọi nơi,</p></li><li><p><code>private</code> là riêng tư chỉ truy cập được trong khu vực nó khai báo</p></li><li><p><code>default</code> chỉ truy cập trong <code>package</code></p></li><li><p><code>protected</code> chỉ truy cập trong <code>package</code> và <code>class</code> con.</p></li></ul><p>==&gt; <code>public</code> &gt; <code>protected</code> &gt; <code>default</code> &gt; <code>private</code></p></div><h2 id="_2-non-access-modifiers" tabindex="-1"><a class="header-anchor" href="#_2-non-access-modifiers" aria-hidden="true">#</a> 2. Non-Access Modifiers</h2><p>🧚‍♂️ <strong>Đối với</strong> <code>classes</code>, bạn có thể sử dụng <code>final</code> và <code>abstract</code></p>',3),q=(0,a._)("thead",null,[(0,a._)("tr",null,[(0,a._)("th",null,[(0,a._)("img",{src:"https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-28-02-icons8-target.png",width:"25"}),(0,a.Uk)("Modifier")]),(0,a._)("th",null,[(0,a._)("img",{src:"https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-30-07-icons8-handle_with_care.png"}),(0,a.Uk)("Mô tả")]),(0,a._)("th",null,"⚠️ Lưu ý")])],-1),A=(0,a._)("td",null,"final",-1),x=(0,a._)("td",null,[(0,a._)("code",null,"class"),(0,a.Uk)(" không thể thừa kế bởi các "),(0,a._)("code",null,"classes"),(0,a.Uk)(" khác")],-1),H=(0,a.Uk)("💡 Tìm hiểu về kế thừa tại bài "),J={href:"https://github.com/Zenfection/Java/blob/master/Java%20OOP/4.Inheritance%26Polymorphism.md",target:"_blank",rel:"noopener noreferrer"},S=(0,a.Uk)("Tính kế thừa và Đa hình"),L=(0,a._)("tr",null,[(0,a._)("td",null,"abstract"),(0,a._)("td",null,[(0,a._)("code",null,"class"),(0,a.Uk)(" không thể sử dụng để tạo "),(0,a._)("code",null,"objects")]),(0,a._)("td",null,[(0,a.Uk)("Để truy cập một "),(0,a._)("code",null,"class"),(0,a.Uk)(" "),(0,a._)("code",null,"abstract"),(0,a.Uk)(" , nó phải kế thừa thì "),(0,a._)("code",null,"class"),(0,a.Uk)(" khác")])],-1),C=(0,a.uE)('<p>🧚‍♂️ <strong>Đối với</strong> <code>attributes</code>, <code>methods</code>, <code>constructors</code> bạn có thể sử dụng như sau:</p><table><thead><tr><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-13-28-02-icons8-target.png" width="25">Modifier</th><th><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-12-30-07-icons8-handle_with_care.png">Mô tả</th><th>⚠️ Lưu ý</th></tr></thead><tbody><tr><td>final</td><td><code>Atrributes</code> và <code>methods</code> không để sửa đổi</td><td></td></tr><tr><td>static</td><td><code>Attributes</code> và <code>methods</code> thuộc về <code>class</code> chứ không phải <code>objects</code></td><td></td></tr><tr><td>abstract</td><td>chỉ có thể sử dụng trên một <code>abstract class</code> và <code>methods</code>.</td><td><code>Methods</code> không có body, như <code>abstact void run();</code><br>body được cung cấp bởi <code>subclass</code> (được kế thừa)</td></tr><tr><td>transient</td><td><code>Attributes</code> và <code>Methods</code> có thể bỏ qua khi tuần tự hoá <code>object</code> chứa chúng</td><td></td></tr><tr><td>synchronized</td><td><code>Methods</code> chỉ có thể truy cập mỗi lần một <code>thread</code></td><td></td></tr><tr><td>volatile</td><td>Giá trị của <code>attribute</code> không được lưu trong <code>thread-locally</code>, và luôn đọc từ <code>main memory</code></td><td></td></tr></tbody></table><h3 id="💡-giai-thich-cu-the" tabindex="-1"><a class="header-anchor" href="#💡-giai-thich-cu-the" aria-hidden="true">#</a> 💡 GIẢI THÍCH CỤ THỂ</h3><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-17-51-46-icons8-final_state.png" width="25"> <b>Final</b></summary><p>Nếu bạn không muốn bất kỳ chỉnh sửa nào thì khai báo <code>final</code></p><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/02-14-33-28-Ảnh chụp Màn hình 2021-02-02 lúc 14.33.22.png"><blockquote><p>💡 Sẽ gặp lỗi ngay nếu bạn cố thay đổi nó.</p></blockquote></details><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-17-51-47-icons8-states.png" width="25"> <b>Static</b></summary><p>Nó có truy cập mà không cần tạo một <code>Object</code> của <code>class</code>, không như <code>public</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>\n  <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">myStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// tạo một method static</span>\n      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Đây là static&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// tạo một method public</span>\n      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Đây là Public&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token function">myStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token class-name">Demo</span> myObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      myObj<span class="token punctuation">.</span><span class="token function">myPublic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/*Đây là static\n  Đây là Public */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><blockquote><p>🔥 Như bạn đã thấy thì khi khai báo <code>static</code> không cần thông qua <code>Object</code></p></blockquote></details><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-17-51-49-icons8-biotech.png" width="25"> <b>Abstract</b></summary><p>Một phương thức trừu tượng (<code>abstract</code>) của một lớp trừu tượng và nó không có phần body, body được cung cấp từ <code>subclasses</code> như sau:</p></details>',6),E={render:function(n,t){const s=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[e,(0,a._)("table",null,[c,(0,a._)("tbody",null,[o,(0,a._)("tr",null,[l,i,(0,a._)("td",null,[u,d,p,(0,a._)("a",r,[h,(0,a.Wm)(s)])])])])]),m,(0,a._)("table",null,[k,(0,a._)("tbody",null,[b,g,(0,a._)("tr",null,[_,v,(0,a._)("td",null,[f,y,U,(0,a._)("a",w,[I,(0,a.Wm)(s)])])]),(0,a._)("tr",null,[M,O,(0,a._)("td",null,[P,(0,a._)("a",Z,[j,(0,a.Wm)(s)])])])])]),T,(0,a._)("table",null,[q,(0,a._)("tbody",null,[(0,a._)("tr",null,[A,x,(0,a._)("td",null,[H,(0,a._)("a",J,[S,(0,a.Wm)(s)])])]),L])]),C],64)}}}}]);