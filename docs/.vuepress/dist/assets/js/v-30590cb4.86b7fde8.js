"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2981],{10268:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-30590cb4",path:"/devbook/java/OOP/5.html",title:"Bài 5: Tính trừu tượng và Interface",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.Abstract",slug:"_1-abstract",children:[]},{level:2,title:"2.Interface",slug:"_2-interface",children:[]}],filePathRelative:"devbook/java/OOP/5.md",git:{updatedTime:1629908316e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},83845:(n,s,a)=>{a.r(s),a.d(s,{default:()=>g});var t=a(66252);const p=(0,t.uE)('<h1 id="bai-5-tinh-truu-tuong-va-interface" tabindex="-1"><a class="header-anchor" href="#bai-5-tinh-truu-tuong-va-interface" aria-hidden="true">#</a> Bài 5: Tính trừu tượng và Interface</h1><h2 id="_1-abstract" tabindex="-1"><a class="header-anchor" href="#_1-abstract" aria-hidden="true">#</a> 1.Abstract</h2><p><code>Data Abstact</code> (<em>trừu tượng dữ liệu</em>) có nghĩa là ẩn một số chi tiết nhất định và hiển thị những thứ cần thiết cho người dùng.</p><div class="custom-container tip"><p class="custom-container-title">💡 MẸO</p><p>Hiểu đơn giản thì bạn gọi một món ăn thì bạn không cần phải biết quy trình nấu ăn, công thức nấu... chỉ cần ăn thôi.</p></div>',4),e=(0,t.Uk)("Từ khoá "),c=(0,t._)("code",null,"abstract",-1),o=(0,t.Uk)(" là một "),l=(0,t._)("code",null,"non-access modifier",-1),u=(0,t.Uk)(" bạn đã học trong bài "),i=(0,t.Uk)("Phạm vi truy cập"),r=(0,t.Uk)(" , sử dụng cho "),k=(0,t._)("code",null,"classes",-1),d=(0,t.Uk)(" và "),m=(0,t._)("code",null,"methods",-1),b=(0,t.Uk)(" :"),h=(0,t.uE)('<div class="custom-container tip"><p class="custom-container-title">🤔 GHI NHỚ</p><ul><li><p><code>Abstract class</code> : đây là một <code>class</code> không được sử dụng để tạo <code>Object</code> (<em>nó chỉ dùng để kế thừa</em>).</p></li><li><p><code>Abstact method</code> : có thể sử dụng trong <code>Abstract class</code> và không có phần <code>body</code> (<em>phần <code>body</code> được cung cấp bởi <code>subclass</code> hoặc kế thừa từ nó</em>).</p></li></ul></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">animalSound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Zzz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">⚠️ LƯU Ý</p><p>Không thể tạo <code>Object</code> từ một lớp <code>Abstract</code> như sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Animal</span> myObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// sẽ lỗi</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></div><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/02-14-14-12-Language%20Learning.png" width="30"> Cách truy cập vào <code>abstract class`</code></summary><p>Nó phải được kế thừa từ <code>class</code> khác. Hãy đổi lớp <code>Animal</code> mà ta sử udng5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//khai báo lớp abstract</span>\n<span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">Animal</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">void</span> <span class="token function">animalSound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Zzz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//khai báo subclass (kế thừa từ lớp Animal)</span>\n<span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">animalSound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Con mèo kêu : mèo méo meo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Cat</span> myCat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        myCat<span class="token punctuation">.</span><span class="token function">animalSound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        myCat<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* Con mèo kêu : mèo méo meo\n   Zzz  */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">🚀 LƯU Ý</p><p>Như bạn đã thấy, <code>abstract class</code> chỉ cho phép kế thừa nó, và ta sử dụng thôi, dễ mà !!!</p></div></details><p>::: 💡 tip MẸO</p><p>Ta sử dụng tính <code>Abstract</code> (<em>trừu tượng</em>) để :</p><p>==&gt; Bảo đảm tính <strong>bảo mật</strong> (<em>ẩn các chi tiết quan trọng và chỉ hiển thị thứ cần thiết</em>)</p><h2 id="_2-interface" tabindex="-1"><a class="header-anchor" href="#_2-interface" aria-hidden="true">#</a> 2.Interface</h2><div class="custom-container tip"><p class="custom-container-title">💡 INTERFACE LÀ GÌ ?</p><p><code>Interface</code> là một bản thiết kế cho <code>abstract class</code>, được sử dụng để nhóm các <code>methods</code> với phần <code>body</code> trống :</p></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//interface</span>\n<span class="token keyword">interface</span> <span class="token class-name">Animal</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">animalSound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//không có body =&gt; gọi là interface methods =</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//không có body =&gt; gọi là interface method</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>🔥 Để truy cập vào <code>Interface Methods</code> ta phải dùng từ khoá <code>implements</code> (<em>thay vì sử dụng <code>extends</code></em>) như sau :</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">interface</span> <span class="token class-name">Animal</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">animalSound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">implements</span> <span class="token class-name">Animal</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">animalSound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Con mèo kêu : mèo méo meo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Cat</span> myCat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        myCat<span class="token punctuation">.</span><span class="token function">animalSound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        myCat<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* Con mèo kêu mèo méo meo\n   Zzz, khò khò  */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">🧨 TÍnh chất của <code>Interface</code></p><ul><li><p>Các <code>Interface methods</code> không có phần <code>body</code>, được cung cấp bởi lớp <code>implement</code></p></li><li><p>Về việc dùng <code>Interface</code>, bạn phải ghi đè lại tất cả <code>methods</code></p></li><li><p>Mặc định thì <code>Interface methods</code> là <code>abstract</code> và <code>public</code></p></li><li><p>Mặc định thì <code>Interface attributes</code> là <code>public</code>, <code>static</code>, <code>final</code></p></li></ul></div><div class="custom-container warning"><p class="custom-container-title">⚠️ LƯU Ý</p><ul><li><p>Giống như <code>abstract class</code>, <code>interface</code> không sử dụng để tạo <code>Object</code></p></li><li><p>Một <code>Interface</code> không thể chứa <code>constructor</code></p></li></ul></div><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-18-02-21-icons8-why_quest.png" width="30"> Lý do sử dụng <code>Interface</code></summary><ul><li>Để được sử bảo mật an toàn.</li><li><code>Java</code> không hỗ trợ <code>multiple inheritance</code> (<em>đa kế thừa</em>) - tức là một <code>class</code> có thể kế thừa từ một <code>subclass</code> ==&gt; Tuy nhiên ta có thể làm được điều đó bằng cách sử dụng <code>Interface</code></li></ul><blockquote><p>💭 Đơn giản hơn là khi bạn vào nhà hàng, người ta sẽ đưa cho bạn cái menu chọn món, chứ không ai lại dẫn bạn vào nhà bếp coi món nào để chọn ==&gt; <code>Interface</code> là cái menu đó.</p></blockquote></details><details class="custom-container details"><summary><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-18-02-21-icons8-why_quest.png" width="30"> Dùng <code>Interface</code> cho <b>đa kế thừa</b></summary><p>Ta sử dụng từ khoá <code>implement</code> đến nhiều <code>Interface</code> cách nhau bởi dấu <code>;</code> như sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">interface</span> <span class="token function">firstInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myMethod1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">interface</span> <span class="token function">secondInterface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myMethod2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token keyword">implements</span> firstInterface<span class="token punctuation">,</span> secondInterface <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myMethod1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;bla bla bla&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">myMethod2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ble ble ble&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">DemoClass</span> myObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DemoClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        myObj<span class="token punctuation">.</span><span class="token function">myMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        myObj<span class="token punctuation">.</span><span class="token function">myOtherMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* bla bla bla\n   ble ble ble */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div></details>',16),g={render:function(n,s){const a=(0,t.up)("RouterLink");return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,(0,t._)("p",null,[e,c,o,l,u,(0,t.Wm)(a,{to:"/language/Java/OOP/2.html"},{default:(0,t.w5)((()=>[i])),_:1}),r,k,d,m,b]),h],64)}}}}]);