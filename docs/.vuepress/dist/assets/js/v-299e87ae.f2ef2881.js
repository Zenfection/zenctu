"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[648],{62011:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-299e87ae",path:"/devbook/java/Advanced/12.html",title:"B√†i 12: Threads",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.Gi·ªõi thi·ªáu",slug:"_1-gioi-thieu",children:[]},{level:2,title:"2.S·ª≠ d·ª•ng",slug:"_2-su-dung",children:[]}],filePathRelative:"devbook/java/Advanced/12.md",git:{updatedTime:1629908316e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},61928:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(66252).uE)('<h1 id="bai-12-threads" tabindex="-1"><a class="header-anchor" href="#bai-12-threads" aria-hidden="true">#</a> B√†i 12: Threads</h1><h2 id="_1-gioi-thieu" tabindex="-1"><a class="header-anchor" href="#_1-gioi-thieu" aria-hidden="true">#</a> 1.Gi·ªõi thi·ªáu</h2><div class="custom-container tip"><p class="custom-container-title">üí° <b>THREADS</b> L√Ä G√å ?</p><p><code>Threads</code> (<em>Lu·ªìng</em>) cho ph√©p ho·∫°t ƒë·ªông hi·ªáu qu·∫£ h∆°n b·∫±ng c√°ch ch·∫°y nhi·ªÅu th·ª© c√πng l√∫c</p><p>==&gt; S·ª≠ d·ª•ng ƒë·ªÉ th·ª±c thi c√°c <strong>t√°c v·ª• ph·ª©c t·∫°p</strong> trong n·ªÅn m√† kh√¥ng l√†m gi√°n ƒëo·∫°n ch∆∞∆°ng tr√¨nh ch√≠nh</p></div><p>C√≥ 2 c√°ch ƒë·ªÉ t·∫°o <code>Thread</code> :</p><ul><li><p>S·ª≠ d·ª•ng b·∫±ng c√°ch k·∫ø th·ª´a l·ªõp <code>Thread</code> v√† ƒë√® ph∆∞∆°ng th·ª©c <code>run()</code> nh∆∞ sau:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Code ƒëang ch·∫°y lu·ªìng run&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>C√°ch kh√°c ‚û® B·ªï sung t·ª´ interface <code>Runnable</code> nh∆∞ sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Code ƒëang ch·∫°y lu·ªìng run&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ul><h2 id="_2-su-dung" tabindex="-1"><a class="header-anchor" href="#_2-su-dung" aria-hidden="true">#</a> 2.S·ª≠ d·ª•ng</h2><ul><li>N·∫øu b·∫°n s·ª≠ d·ª•ng c√°ch k·∫ø th·ª´a l·ªõp <code>Thread</code>, ta c√≥ th·ªÉ ch·∫°y lu·ªìng b·∫±ng c√°ch s·ª≠ d·ª•ng ph∆∞∆°ng th·ª©c <code>start()</code> :</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span> <span class="token punctuation">{</span>\n  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Main</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Code n√†y n·∫±m b√™n ngo√†i lu·ªìng&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Code n√†y ƒëang ch·∫°y trong lu·ªìng&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* Code n√†y ƒëang ch·∫°y trong lu·ªìng\n   Code n√†y n·∫±m b√™n ngo√†i lu·ªìng    */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li><p>N·∫øu s·ª≠ d·ª•ng b·ªï sung interface <code>Runnable</code>, th√¨ ta ph·∫£i t·∫°o ƒë·ªëi t∆∞·ª£ng <code>Thread</code> v√† g·ªçi ph∆∞∆°ng th·ª©c <code>start()</code> nh∆∞ sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">implements</span> <span class="token class-name">Runnable</span> <span class="token punctuation">{</span>\n  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">Main</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Code n√†y n·∫±m b√™n ngo√†i lu·ªìng&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Code n√†y ƒëang ch·∫°y trong lu·ªìng&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* Code n√†y ƒëang ch·∫°y trong lu·ªìng\n   Code n√†y n·∫±m b√™n ngo√†i lu·ªìng    */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></li></ul><div class="custom-container tip"><p class="custom-container-title"><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/07/30-15-17-12-icons8-comparing.png" width="30"> S·ª± kh√°c nhau gi·ªØa 2 c√°i tr√™n</p><p>ƒêi·ªÉm ch√≠nh kh√°c nhau l√† khi b·∫°n d√πng <strong>k·∫ø th·ª´a</strong> l·ªõp <code>Thread</code>, b·∫°n kh√¥ng th·ªÉ k·∫ø th·ª´a l·ªõp n√†o kh√°c, c√≤n b·ªï sung interface <code>Runnable</code> th√¨ c√≥ th·ªÉ.</p></div><div class="custom-container warning"><p class="custom-container-title"><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/08-17-36-14-Professor%20Male.png" width="30"> V·∫•n ƒë·ªÅ ƒë·∫∑t ra</p><p>Nh∆∞ b·∫°n ƒë√£ bi·∫øt th√¨ <code>Thread</code> s·∫Ω ch·∫°y song song v·ªõi ch∆∞∆°ng tr√¨nh, v·∫≠y th√¨ l√†m sao n√≥ c√≥ th·ªÉ bi·∫øt th·ª© t·ª± ch·∫°y c·ªßa t·ª´ng <code>Thread</code>, v·∫•n ƒë·ªÅ ƒë√≥ g·ªçi l√†</p><blockquote><p>üî• V√≠ d·ª• khi ch∆∞∆°ng tr√¨nh <code>threads</code> v√† <code>main</code> c√πng ƒë·ªçc v√† ghi bi·∫øn <code>x</code> th√¨ s·∫Ω x·∫£y ra l·ªói kh√¥ng mong mu·ªën v√¨ th·ª© t·ª± th·ª±c hi·ªán.</p></blockquote></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> amount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Main</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        amount<span class="token operator">++</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        amount<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 0 2</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><blockquote><p>==&gt; Nh∆∞ c√°c b·∫°n ƒë√£ th·∫•y, th√¨ l·ªói v√† khi c·ªë ch·∫°y n√≥ s·∫Ω kh√¥ng cho ta k·∫øt qu·∫£ mong mu·ªën !!!</p></blockquote><div class="custom-container tip"><p class="custom-container-title">üí° GI·∫¢I QUY·∫æT</p><p>C√°ch t·ªët nh·∫•t l√† b·∫°n h·∫°n ch·∫ø s·ª≠ d·ª•ng <code>attribute</code> chung cho h√†m <code>thread</code> v√† <code>main</code>. N·∫øu b·∫Øt bu·ªôc ph·∫£i s·ª≠ d·ª•ng, h√£y s·ª≠ d·ª•ng ph∆∞∆°ng th·ª©c <code>isAlive()</code> nh∆∞ sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">extends</span> <span class="token class-name">Thread</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> amount <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Main</span> thread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">while</span><span class="token punctuation">(</span>thread<span class="token punctuation">.</span><span class="token function">isAlive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;ƒê·ª£i x·ª≠ l√Ω xong ƒë√£&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Amount = &quot;</span> <span class="token operator">+</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        amount<span class="token operator">++</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Amount = &quot;</span> <span class="token operator">+</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        amount<span class="token operator">++</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// ƒê·ª£i x·ª≠ l√Ω xong ƒë√£</span>\n<span class="token comment">// Amount = 1;</span>\n<span class="token comment">// Amount = 2;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div></div>',14),t={render:function(n,s){return p}}}}]);