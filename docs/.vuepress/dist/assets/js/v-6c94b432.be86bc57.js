"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7047],{10872:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-6c94b432",path:"/devbook/java/Advanced/1.html",title:"B√†i 1: Enums",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.Gi·ªõi thi·ªáu",slug:"_1-gioi-thieu",children:[]},{level:2,title:"2.S·ª≠ d·ª•ng",slug:"_2-su-dung",children:[]}],filePathRelative:"devbook/java/Advanced/1.md",git:{updatedTime:1629908316e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},97542:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(66252).uE)('<h1 id="bai-1-enums" tabindex="-1"><a class="header-anchor" href="#bai-1-enums" aria-hidden="true">#</a> B√†i 1: Enums</h1><h2 id="_1-gioi-thieu" tabindex="-1"><a class="header-anchor" href="#_1-gioi-thieu" aria-hidden="true">#</a> 1.Gi·ªõi thi·ªáu</h2><div class="custom-container tip"><p class="custom-container-title">üí° <b>ENUM</b> L√Ä G√å?</p><p><code>emum</code> (<em>enumerations</em>) : l√† m·ªôt <code>class</code> <strong>ƒë·∫∑c bi·ªát</strong> ƒë·∫°i di·ªán cho m·ªôt nh√≥m c√°c <strong>h·∫±ng s·ªë</strong> (<code>constants</code>) : <em>l√† nh·ªØng bi·∫øn kh√¥ng ƒë·ªïi, nh∆∞ s·ª≠ d·ª•ng <code>final</code></em></p></div><p>Ta s·ª≠ d·ª•ng t·ª´ kho√° <code>enum</code> nh∆∞ sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">enum</span> <span class="token class-name">Level</span><span class="token punctuation">{</span>\n    LOW<span class="token punctuation">,</span>\n    MEDIUM<span class="token punctuation">,</span>\n    HIGH\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">‚ö†Ô∏è L∆ØU √ù</p><ul><li><p>Ph√¢n t√°ch c√°c <strong>h√†ng s·ªë</strong> b√™n trong b·∫±ng d·∫•u <code>;</code></p></li><li><p>C√°c <strong>h·∫±ng s·ªë</strong> ph·∫£i ƒë∆∞·ª£c <strong>vi·∫øt HOA</strong> to√†n b·ªô</p></li></ul></div><p>S·ª≠ d·ª•ng ch√∫ng b·∫±ng c√°ch <code>.</code> nh∆∞ sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Level</span> myVar <span class="token operator">=</span> <span class="token class-name">Level</span><span class="token punctuation">.</span>MEDIUM<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="_2-su-dung" tabindex="-1"><a class="header-anchor" href="#_2-su-dung" aria-hidden="true">#</a> 2.S·ª≠ d·ª•ng</h2><p>Ta c√≥ th·ªÉ s·ª≠ d·ª•ng <code>emum</code> b√™n trong c√°c <code>Class</code>, <em>c√¢u ƒëi·ªÅu ki·ªán</em>, <em>v√≤ng l·∫∑p</em> c·ª• th·ªÉ nh∆∞ sau :</p><details class="custom-container details"><summary>‚ò≤ <b>Enum</b> trong <code>Class</code></summary><p>B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng <code>enum</code> b√™n trong m·ªôt <code>class</code> nh∆∞ sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>\n    <span class="token keyword">enum</span> <span class="token class-name">HocLuc</span><span class="token punctuation">{</span>\n        YEU<span class="token punctuation">,</span>\n        TRUNGBINH<span class="token punctuation">,</span>\n        GIOI\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Level</span> xepLoai <span class="token operator">=</span> <span class="token class-name">HocLuc</span><span class="token punctuation">.</span>TRUNGBINH<span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>xepLoai<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// output : TRUNGBINH</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></details><details class="custom-container details"><summary>‚ò≤ <b>Enum</b> trong c√¢u ƒëi·ªÅu ki·ªán <code>Swich..case</code></summary><p><code>Enum</code> th∆∞·ªùng ƒë∆∞·ª£c s·ª≠ d·ª•ng trong c√¢u ƒëi·ªÅu ki·ªán <code>Switch..case</code> ƒë·ªÉ ki·ªÉm tra gi√° tr·ªã t∆∞∆°ng ƒë∆∞∆°ng, nh∆∞ sau:</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">enum</span> <span class="token class-name">HocLuc</span><span class="token punctuation">{</span>\n    YEU<span class="token punctuation">,</span>\n    TRUNGBINH<span class="token punctuation">,</span>\n    GIOI\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token class-name">Main</span><span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token class-name">Level</span> xepLoai <span class="token operator">=</span> <span class="token class-name">HocLuc</span><span class="token punctuation">.</span>TRUNGBINH<span class="token punctuation">;</span>\n\n        <span class="token keyword">switch</span><span class="token punctuation">(</span>xepLoai<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">case</span> YEU<span class="token operator">:</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;X·∫øp lo·∫°i y·∫øu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> TRUNGBINH<span class="token operator">:</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;X·∫øp lo·∫°i trung b√¨nh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n            <span class="token keyword">case</span> GIOI<span class="token operator">:</span>\n                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;X·∫øp lo·∫°i gi·ªèi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token keyword">break</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// output : X·∫øp lo·∫°i trung b√¨nh</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></details><details class="custom-container details"><summary>‚ò≤ <b>Enum</b> trong v√≤ng l·∫∑p</summary><p><code>enum</code> c√≥ ph∆∞∆°ng th·ª©c <code>values()</code>, n√≥ s·∫Ω tr·∫£ v·ªÅ m·∫°ng c√°c h·∫±ng s·ªë <code>enum</code>, nh∆∞ sau :</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span><span class="token punctuation">{</span>\n    <span class="token keyword">enum</span> <span class="token class-name">HocLuc</span><span class="token punctuation">{</span>\n        YEU<span class="token punctuation">,</span>\n        TRUNGBINH<span class="token punctuation">,</span>\n        GIOI\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">HocLuc</span> xepLoai <span class="token operator">:</span> <span class="token class-name">HocLuc</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>xepLoai<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/* YEU\n   TRUNGBINH\n   GIOI      */</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><blockquote><p>üí° C√≥ th·ªÉ d√πng v√≤ng l·∫∑p tr√™n ƒë·ªÉ duy·ªát ra c√°c h·∫±ng s·ªë trong <code>enum</code></p></blockquote></details><div class="custom-container tip"><p class="custom-container-title"><img src="https://raw.githubusercontent.com/Zenfection/Image/master/2021/02/02-14-14-12-Language%20Learning.png" width="35"> <b>ENUMS</b> vs <b>CLASSES</b></p><ul><li><p><code>enum</code> v√† <code>class</code> ƒë·ªÅu c√≥ th·ªÉ ch·ª©a c√°c <code>attributes</code> v√† <code>methods</code>. Nh∆∞ng s·ª± kh√°c nhau gi·ªØ ch√∫ng n·∫±m ·ªü <code>enum</code> l√† <code>public</code>, <code>static</code>, <code>final</code> (<em>kh√¥ng th·ªÉ thay ƒë·ªïi</em>).</p></li><li><p><code>enum</code> kh√¥ng th·ªÉ t·∫°o <code>Object</code> v√† n√≥ kh√¥ng th·ªÉ <code>extends</code> cho c√°c <code>class</code> kh√°c. (<em>nh∆∞ng n√≥ c√≥ th·ªÉ <code>implement</code> cho interface</em>).</p></li></ul></div><div class="custom-container warning"><p class="custom-container-title">‚ö†Ô∏è L∆ØU √ù</p><p>S·ª≠ d·ª•ng <code>enum</code> cho nh·ªØng gi√° tr·ªã m√† b·∫°n cho r·∫±ng n√≥ kh√¥ng th·ªÉ thay ƒë·ªïi nh∆∞ : <em>ng√†y/th√°ng/nƒÉm,h·∫±ng s·ªë...</em></p></div>',15),p={render:function(n,s){return e}}}}]);