"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9633],{12532:(t,n,r)=>{r.r(n),r.d(n,{data:()=>d});const d={key:"v-4eb833b2",path:"/devbook/java/Basic/6.html",title:"Bài 6: Toán tử",lang:"vi",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.Toán tử số học",slug:"_1-toan-tu-so-hoc",children:[]},{level:2,title:"2.Toán tử gán",slug:"_2-toan-tu-gan",children:[]},{level:2,title:"3.Toán tử so sánh",slug:"_3-toan-tu-so-sanh",children:[]},{level:2,title:"4.Toán tử logic",slug:"_4-toan-tu-logic",children:[]},{level:2,title:"5.Toán tử Bit",slug:"_5-toan-tu-bit",children:[]}],filePathRelative:"devbook/java/Basic/6.md",git:{updatedTime:1629908316e3,contributors:[{name:"Zenfection",email:"44715845+Zenfection1412@users.noreply.github.com",commits:1}]}}},17168:(t,n,r)=>{r.r(n),r.d(n,{default:()=>g});var d=r(66252);const o=(0,d.uE)('<h1 id="bai-6-toan-tu" tabindex="-1"><a class="header-anchor" href="#bai-6-toan-tu" aria-hidden="true">#</a> Bài 6: Toán tử</h1><p>Được sử dụng để thực hiện trên phép tính của các biến với nhau, có <strong>5</strong> nhóm sau :</p><div class="custom-container tip"><p class="custom-container-title">💡 5 LOẠI TOÁN TỬ</p><ul><li><code>Arithmetic</code> : <em>Toán tử số học</em></li><li><code>Assignment</code> : <em>Toán tử gán</em></li><li><code>Comparsion</code> : <em>Toán tử so sánh</em></li><li><code>Logical</code> : <em>Toán tử logic</em></li><li><code>Bitwise</code> : <em>Toán tử thao tác bit</em></li></ul></div><h2 id="_1-toan-tu-so-hoc" tabindex="-1"><a class="header-anchor" href="#_1-toan-tu-so-hoc" aria-hidden="true">#</a> 1.Toán tử số học</h2><p>Có các loại toán tử sau đây :</p><table><thead><tr><th>Toán tử</th><th>Miêu tả</th><th>Ví dụ</th></tr></thead><tbody><tr><td>+</td><td>Phép cộng</td><td>2 + 3 ⇨ 5</td></tr><tr><td>-</td><td>Phép trừ</td><td>2 - 3 ⇨ -1</td></tr><tr><td>*</td><td>Phép nhân</td><td>2 * 3 ⇨ 6</td></tr><tr><td>/</td><td>Phép chia</td><td>2 / 3 ⇨ 0</td></tr><tr><td>%</td><td>Phép chia lấy dư</td><td>2 % 3 ⇨ 2</td></tr><tr><td>++</td><td>tăng thêm 1</td><td>2++ ⇨ 3</td></tr><tr><td>--</td><td>giảm lại 1</td><td>2-- ⇨ 1</td></tr></tbody></table><div class="custom-container tip"><p class="custom-container-title">🤔 MẸO</p><p>Bạn chỉ cần nhớ toán tử số học là <code>cộng, trừ, nhân, chia</code></p></div><h2 id="_2-toan-tu-gan" tabindex="-1"><a class="header-anchor" href="#_2-toan-tu-gan" aria-hidden="true">#</a> 2.Toán tử gán</h2><p>Có các loại toán tử sau :</p><table><thead><tr><th>Toán tử</th><th>Miêu tả</th><th>Ví dụ (<em>a = 2</em>)</th></tr></thead><tbody><tr><td>=</td><td>phép gán</td><td>a = 2</td></tr><tr><td>+=<br>-=<br>*=<br>/=<br>%=</td><td>phép cộng và gán<br>phép trừ và gán<br>phép nhân và gán<br>phép chia và gán<br>phép chia lấy dư vá gán</td><td>a <strong>+=</strong> 3  ⇨ <strong>a = 5</strong><br>a -= 3   ⇨ <strong>a = -1</strong><br>a *<strong>=</strong> 3  ⇨ <strong>a = 6</strong><br>a <strong>/=</strong> 3   ⇨ <strong>a = 0</strong><br>a <strong>%=</strong> 3 ⇨ <strong>a = 2</strong><br></td></tr></tbody></table><h2 id="_3-toan-tu-so-sanh" tabindex="-1"><a class="header-anchor" href="#_3-toan-tu-so-sanh" aria-hidden="true">#</a> 3.Toán tử so sánh</h2><p>Có các loại toán tử sau :</p><table><thead><tr><th>Toán tử</th><th>Miêu tả</th><th>Ví dụ (<em>a = 2</em>)</th></tr></thead><tbody><tr><td>==<br>!=</td><td>bằng<br>không bằng</td><td>a <strong>==</strong> 2<br>a <strong>!=</strong> 3</td></tr><tr><td>&gt;<br>&lt;</td><td>lớn hơn<br>nhỏ hơn</td><td>a <strong>&gt;</strong> 1<br>a <strong>&lt;</strong> 3</td></tr><tr><td>&gt;=<br>&lt;=</td><td>lớn hơn hoặc bằng<br>nhỏ hơn hoặc bằng</td><td>a <strong>&gt;=</strong> 2<br>a <strong>&lt;=</strong> 2</td></tr></tbody></table><h2 id="_4-toan-tu-logic" tabindex="-1"><a class="header-anchor" href="#_4-toan-tu-logic" aria-hidden="true">#</a> 4.Toán tử logic</h2><p>Có các loại toán tử sau :</p><table><thead><tr><th>Toán tử</th><th>Miêu tả</th><th>Ví dụ (<em>a = 2</em>)</th></tr></thead><tbody><tr><td>&amp;&amp;</td><td>Phép <strong>và</strong> : <em>nếu cả hai true thì true</em> <br><em>một trong hai false thì false</em></td><td>a <strong>&gt;</strong> 1 <strong>&amp;&amp;</strong> a <strong>==</strong> 2</td></tr><tr><td>||</td><td>Phép <strong>hoặc</strong> : <em>nếu cả 2 false thì false</em><br><em>một trong hai true thì true</em></td><td>a <strong>&lt;</strong> 1 <strong>||</strong> a <strong>==</strong> 2</td></tr><tr><td>!</td><td>Phép <strong>phủ</strong> : <em>true thành false</em> và <em>false thành true</em></td><td><strong>!a</strong></td></tr></tbody></table><div class="custom-container tip"><p class="custom-container-title">🔥 MẸO</p><p>Phép phủ tức là ngược lại : <code>true</code> ⇨ <code>false</code> và <code>false</code> ⇨ <code>true</code></p></div><h2 id="_5-toan-tu-bit" tabindex="-1"><a class="header-anchor" href="#_5-toan-tu-bit" aria-hidden="true">#</a> 5.Toán tử Bit</h2><p>Đây là thao tác trên <code>Bit</code>, các bạn không cần phải hiểu nó quá kỹ, biết là có là được.</p><table><thead><tr><th>Toán tử</th><th>Miêu tả</th><th>Ví dụ (<em>A = 2 và B = 3</em>)</th></tr></thead><tbody><tr><td>&amp;</td><td>Phép <strong>And bit</strong></td><td>A <strong>&amp;</strong> B ⇨ 2</td></tr><tr><td>!</td><td>Phép <strong>OR bit</strong></td><td>A <strong>|</strong> B ⇨ 3</td></tr><tr><td>^</td><td>Phép <strong>XOR bit</strong></td><td>A <strong>^</strong> B ⇨ 1</td></tr><tr><td>~</td><td>Phép <strong>phủ bit</strong></td><td>~B  ⇨ -4</td></tr><tr><td>&lt;&lt;</td><td>Phép <strong>dịch trái</strong></td><td>A <strong>&lt;&lt;</strong> 1 ⇨ 4</td></tr><tr><td>&gt;&gt;</td><td>Phép <strong>dịch phải</strong></td><td>A <strong>&gt;&gt;</strong> 1 ⇨ 1</td></tr><tr><td>&gt;&gt;&gt;</td><td>Phép <strong>dịch phải với Zero</strong></td><td>A <strong>&gt;&gt;&gt;</strong> 1 ⇨ 1</td></tr></tbody></table>',20),e={class:"custom-container tip"},a=(0,d._)("p",{class:"custom-container-title"},"💡 KHÔNG CẦN PHẢI BIẾT BITWISE",-1),h=(0,d.Uk)("Nếu bạn muốn tìm hiểu, hãy xem "),s={href:"https://openplanning.net/12281/cac-toan-tu-bitwise",target:"_blank",rel:"noopener noreferrer"},i=(0,d.Uk)("tại đây"),g={render:function(t,n){const r=(0,d.up)("OutboundLink");return(0,d.wg)(),(0,d.iD)(d.HY,null,[o,(0,d._)("div",e,[a,(0,d._)("p",null,[h,(0,d._)("a",s,[i,(0,d.Wm)(r)])])])],64)}}}}]);